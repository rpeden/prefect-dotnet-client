/*
 * Prefect API Client for .NET
 *
 * For more information, visit: https://github.com/rpeden/prefect-client-dotnet
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = PrefectClient.Client.FileParameter;
using OpenAPIDateConverter = PrefectClient.Client.OpenAPIDateConverter;

namespace PrefectClient.Model
{
    /// <summary>
    /// Contains validated Prefect settings.\\n\\nSettings should be accessed using the relevant `Setting` object. For example:\\n```python\\nfrom prefect.settings import PREFECT_HOME\\nPREFECT_HOME.value()\\n```\\n\\nAccessing a setting attribute directly will ignore any `value_callback` mutations.\\nThis is not recommended:\\n```python\\nfrom prefect.settings import Settings\\nSettings().PREFECT_PROFILES_PATH  # PosixPath('${PREFECT_HOME}/profiles.toml')\\n```
    /// </summary>
    [DataContract(Name = "Settings")]
public partial class Settings : IEquatable<Settings>, IValidatableObject
    {
        /// <summary>
        /// Defines PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum LoggingToApiWhenMissingFlow
        {
            /// <summary>
            /// Enum Warn for value: warn
            /// </summary>
            [EnumMember(Value = "warn")]
            Warn = 1,

            /// <summary>
            /// Enum Error for value: error
            /// </summary>
            [EnumMember(Value = "error")]
            Error = 2,

            /// <summary>
            /// Enum Ignore for value: ignore
            /// </summary>
            [EnumMember(Value = "ignore")]
            Ignore = 3
        }


        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW", EmitDefaultValue = false)]
        public LoggingToApiWhenMissingFlow? PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW { get; set; }
        /// <summary>
        /// Defines PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum LoggingOrionWhenMissingFlow
        {
            /// <summary>
            /// Enum Warn for value: warn
            /// </summary>
            [EnumMember(Value = "warn")]
            Warn = 1,

            /// <summary>
            /// Enum Error for value: error
            /// </summary>
            [EnumMember(Value = "error")]
            Error = 2,

            /// <summary>
            /// Enum Ignore for value: ignore
            /// </summary>
            [EnumMember(Value = "ignore")]
            Ignore = 3
        }


        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW", EmitDefaultValue = false)]
        public LoggingOrionWhenMissingFlow? PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW { get; set; }
        

        /// <summary>
        /// Gets or Sets PREFECT_HOME
        /// </summary>
        [DataMember(Name = "PREFECT_HOME", EmitDefaultValue = false)]
        public string? PREFECT_HOME { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXTRA_ENTRYPOINTS
        /// </summary>
        [DataMember(Name = "PREFECT_EXTRA_ENTRYPOINTS", EmitDefaultValue = false)]
        public string? PREFECT_EXTRA_ENTRYPOINTS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_DEBUG_MODE
        /// </summary>
        [DataMember(Name = "PREFECT_DEBUG_MODE", EmitDefaultValue = true)]
        public bool? PREFECT_DEBUG_MODE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_CLI_COLORS
        /// </summary>
        [DataMember(Name = "PREFECT_CLI_COLORS", EmitDefaultValue = true)]
        public bool? PREFECT_CLI_COLORS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_CLI_PROMPT
        /// </summary>
        [DataMember(Name = "PREFECT_CLI_PROMPT", EmitDefaultValue = true)]
        public bool? PREFECT_CLI_PROMPT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_CLI_WRAP_LINES
        /// </summary>
        [DataMember(Name = "PREFECT_CLI_WRAP_LINES", EmitDefaultValue = true)]
        public bool? PREFECT_CLI_WRAP_LINES { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_TEST_MODE
        /// </summary>
        [DataMember(Name = "PREFECT_TEST_MODE", EmitDefaultValue = true)]
        public bool? PREFECT_TEST_MODE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_UNIT_TEST_MODE
        /// </summary>
        [DataMember(Name = "PREFECT_UNIT_TEST_MODE", EmitDefaultValue = true)]
        public bool? PREFECT_UNIT_TEST_MODE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_TEST_SETTING
        /// </summary>
        [DataMember(Name = "PREFECT_TEST_SETTING", EmitDefaultValue = true)]
        public Object? PREFECT_TEST_SETTING { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_TLS_INSECURE_SKIP_VERIFY
        /// </summary>
        [DataMember(Name = "PREFECT_API_TLS_INSECURE_SKIP_VERIFY", EmitDefaultValue = true)]
        public bool? PREFECT_API_TLS_INSECURE_SKIP_VERIFY { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_URL
        /// </summary>
        [DataMember(Name = "PREFECT_API_URL", EmitDefaultValue = false)]
        public string? PREFECT_API_URL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_KEY
        /// </summary>
        [DataMember(Name = "PREFECT_API_KEY", EmitDefaultValue = false)]
        public string? PREFECT_API_KEY { get; set; }

        /// <summary>
        /// Gets or Sets PREFECTAPIENABLEHTTP2
        /// </summary>
        [DataMember(Name = "PREFECT_API_ENABLE_HTTP2", EmitDefaultValue = true)]
        public bool? PREFECTAPIENABLEHTTP2 { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_CLIENT_MAX_RETRIES
        /// </summary>
        [DataMember(Name = "PREFECT_CLIENT_MAX_RETRIES", EmitDefaultValue = false)]
        public int? PREFECT_CLIENT_MAX_RETRIES { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_CLIENT_RETRY_JITTER_FACTOR
        /// </summary>
        [DataMember(Name = "PREFECT_CLIENT_RETRY_JITTER_FACTOR", EmitDefaultValue = false)]
        public decimal? PREFECT_CLIENT_RETRY_JITTER_FACTOR { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_CLIENT_RETRY_EXTRA_CODES
        /// </summary>
        [DataMember(Name = "PREFECT_CLIENT_RETRY_EXTRA_CODES", EmitDefaultValue = false)]
        public string? PREFECT_CLIENT_RETRY_EXTRA_CODES { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_CLOUD_API_URL
        /// </summary>
        [DataMember(Name = "PREFECT_CLOUD_API_URL", EmitDefaultValue = false)]
        public string? PREFECT_CLOUD_API_URL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_CLOUD_URL
        /// </summary>
        [DataMember(Name = "PREFECT_CLOUD_URL", EmitDefaultValue = false)]
        public string? PREFECT_CLOUD_URL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_UI_URL
        /// </summary>
        [DataMember(Name = "PREFECT_UI_URL", EmitDefaultValue = false)]
        public string? PREFECT_UI_URL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_CLOUD_UI_URL
        /// </summary>
        [DataMember(Name = "PREFECT_CLOUD_UI_URL", EmitDefaultValue = false)]
        public string? PREFECT_CLOUD_UI_URL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_REQUEST_TIMEOUT
        /// </summary>
        [DataMember(Name = "PREFECT_API_REQUEST_TIMEOUT", EmitDefaultValue = false)]
        public decimal? PREFECT_API_REQUEST_TIMEOUT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXPERIMENTAL_WARN
        /// </summary>
        [DataMember(Name = "PREFECT_EXPERIMENTAL_WARN", EmitDefaultValue = true)]
        public bool? PREFECT_EXPERIMENTAL_WARN { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_PROFILES_PATH
        /// </summary>
        [DataMember(Name = "PREFECT_PROFILES_PATH", EmitDefaultValue = false)]
        public string? PREFECT_PROFILES_PATH { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_RESULTS_DEFAULT_SERIALIZER
        /// </summary>
        [DataMember(Name = "PREFECT_RESULTS_DEFAULT_SERIALIZER", EmitDefaultValue = false)]
        public string? PREFECT_RESULTS_DEFAULT_SERIALIZER { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_RESULTS_PERSIST_BY_DEFAULT
        /// </summary>
        [DataMember(Name = "PREFECT_RESULTS_PERSIST_BY_DEFAULT", EmitDefaultValue = true)]
        public bool? PREFECT_RESULTS_PERSIST_BY_DEFAULT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_TASKS_REFRESH_CACHE
        /// </summary>
        [DataMember(Name = "PREFECT_TASKS_REFRESH_CACHE", EmitDefaultValue = true)]
        public bool? PREFECT_TASKS_REFRESH_CACHE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_TASK_DEFAULT_RETRIES
        /// </summary>
        [DataMember(Name = "PREFECT_TASK_DEFAULT_RETRIES", EmitDefaultValue = false)]
        public int? PREFECT_TASK_DEFAULT_RETRIES { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_FLOW_DEFAULT_RETRIES
        /// </summary>
        [DataMember(Name = "PREFECT_FLOW_DEFAULT_RETRIES", EmitDefaultValue = false)]
        public int? PREFECT_FLOW_DEFAULT_RETRIES { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS", EmitDefaultValue = false)]
        public PrefectFlowDefaultRetryDelaySeconds PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS", EmitDefaultValue = false)]
        public PrefectTaskDefaultRetryDelaySeconds PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOCAL_STORAGE_PATH
        /// </summary>
        [DataMember(Name = "PREFECT_LOCAL_STORAGE_PATH", EmitDefaultValue = false)]
        public string? PREFECT_LOCAL_STORAGE_PATH { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_MEMO_STORE_PATH
        /// </summary>
        [DataMember(Name = "PREFECT_MEMO_STORE_PATH", EmitDefaultValue = false)]
        public string? PREFECT_MEMO_STORE_PATH { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION
        /// </summary>
        [DataMember(Name = "PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION", EmitDefaultValue = true)]
        public bool? PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_LEVEL
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_LEVEL", EmitDefaultValue = false)]
        public string? PREFECT_LOGGING_LEVEL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_INTERNAL_LEVEL
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_INTERNAL_LEVEL", EmitDefaultValue = false)]
        public string? PREFECT_LOGGING_INTERNAL_LEVEL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_SERVER_LEVEL
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_SERVER_LEVEL", EmitDefaultValue = false)]
        public string? PREFECT_LOGGING_SERVER_LEVEL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_SETTINGS_PATH
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_SETTINGS_PATH", EmitDefaultValue = false)]
        public string? PREFECT_LOGGING_SETTINGS_PATH { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_EXTRA_LOGGERS
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_EXTRA_LOGGERS", EmitDefaultValue = false)]
        public string? PREFECT_LOGGING_EXTRA_LOGGERS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_LOG_PRINTS
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_LOG_PRINTS", EmitDefaultValue = true)]
        public bool? PREFECT_LOGGING_LOG_PRINTS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_TO_API_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_TO_API_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_LOGGING_TO_API_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_TO_API_BATCH_INTERVAL
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_TO_API_BATCH_INTERVAL", EmitDefaultValue = false)]
        public decimal? PREFECT_LOGGING_TO_API_BATCH_INTERVAL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_TO_API_BATCH_SIZE
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_TO_API_BATCH_SIZE", EmitDefaultValue = false)]
        public int? PREFECT_LOGGING_TO_API_BATCH_SIZE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_TO_API_MAX_LOG_SIZE
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_TO_API_MAX_LOG_SIZE", EmitDefaultValue = false)]
        public int? PREFECT_LOGGING_TO_API_MAX_LOG_SIZE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_COLORS
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_COLORS", EmitDefaultValue = true)]
        public bool? PREFECT_LOGGING_COLORS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_MARKUP
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_MARKUP", EmitDefaultValue = true)]
        public bool? PREFECT_LOGGING_MARKUP { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_AGENT_QUERY_INTERVAL
        /// </summary>
        [DataMember(Name = "PREFECT_AGENT_QUERY_INTERVAL", EmitDefaultValue = false)]
        public decimal? PREFECT_AGENT_QUERY_INTERVAL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_AGENT_PREFETCH_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_AGENT_PREFETCH_SECONDS", EmitDefaultValue = false)]
        public int? PREFECT_AGENT_PREFETCH_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ASYNC_FETCH_STATE_RESULT
        /// </summary>
        [DataMember(Name = "PREFECT_ASYNC_FETCH_STATE_RESULT", EmitDefaultValue = true)]
        public bool? PREFECT_ASYNC_FETCH_STATE_RESULT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_BLOCKS_REGISTER_ON_START
        /// </summary>
        [DataMember(Name = "PREFECT_API_BLOCKS_REGISTER_ON_START", EmitDefaultValue = true)]
        public bool? PREFECT_API_BLOCKS_REGISTER_ON_START { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_DATABASE_PASSWORD
        /// </summary>
        [DataMember(Name = "PREFECT_API_DATABASE_PASSWORD", EmitDefaultValue = false)]
        public string? PREFECT_API_DATABASE_PASSWORD { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_DATABASE_CONNECTION_URL
        /// </summary>
        [DataMember(Name = "PREFECT_API_DATABASE_CONNECTION_URL", EmitDefaultValue = false)]
        public string? PREFECT_API_DATABASE_CONNECTION_URL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_DATABASE_ECHO
        /// </summary>
        [DataMember(Name = "PREFECT_API_DATABASE_ECHO", EmitDefaultValue = true)]
        public bool? PREFECT_API_DATABASE_ECHO { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_DATABASE_MIGRATE_ON_START
        /// </summary>
        [DataMember(Name = "PREFECT_API_DATABASE_MIGRATE_ON_START", EmitDefaultValue = true)]
        public bool? PREFECT_API_DATABASE_MIGRATE_ON_START { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_DATABASE_TIMEOUT
        /// </summary>
        [DataMember(Name = "PREFECT_API_DATABASE_TIMEOUT", EmitDefaultValue = false)]
        public decimal? PREFECT_API_DATABASE_TIMEOUT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_DATABASE_CONNECTION_TIMEOUT
        /// </summary>
        [DataMember(Name = "PREFECT_API_DATABASE_CONNECTION_TIMEOUT", EmitDefaultValue = false)]
        public decimal? PREFECT_API_DATABASE_CONNECTION_TIMEOUT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE", EmitDefaultValue = false)]
        public int? PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS", EmitDefaultValue = false)]
        public int? PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS", EmitDefaultValue = false)]
        public int? PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME", EmitDefaultValue = false)]
        public decimal? PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME", EmitDefaultValue = false)]
        public decimal? PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE", EmitDefaultValue = false)]
        public int? PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_DEFAULT_LIMIT
        /// </summary>
        [DataMember(Name = "PREFECT_API_DEFAULT_LIMIT", EmitDefaultValue = false)]
        public int? PREFECT_API_DEFAULT_LIMIT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_SERVER_API_HOST
        /// </summary>
        [DataMember(Name = "PREFECT_SERVER_API_HOST", EmitDefaultValue = false)]
        public string? PREFECT_SERVER_API_HOST { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_SERVER_API_PORT
        /// </summary>
        [DataMember(Name = "PREFECT_SERVER_API_PORT", EmitDefaultValue = false)]
        public int? PREFECT_SERVER_API_PORT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_SERVER_API_KEEPALIVE_TIMEOUT
        /// </summary>
        [DataMember(Name = "PREFECT_SERVER_API_KEEPALIVE_TIMEOUT", EmitDefaultValue = false)]
        public int? PREFECT_SERVER_API_KEEPALIVE_TIMEOUT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_UI_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_UI_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_UI_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_UI_API_URL
        /// </summary>
        [DataMember(Name = "PREFECT_UI_API_URL", EmitDefaultValue = false)]
        public string? PREFECT_UI_API_URL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_SERVER_ANALYTICS_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_SERVER_ANALYTICS_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_SERVER_ANALYTICS_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_SCHEDULER_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_SCHEDULER_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_API_SERVICES_SCHEDULER_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_LATE_RUNS_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_LATE_RUNS_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_API_SERVICES_LATE_RUNS_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH
        /// </summary>
        [DataMember(Name = "PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH", EmitDefaultValue = false)]
        public int? PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT
        /// </summary>
        [DataMember(Name = "PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT", EmitDefaultValue = true)]
        public bool? PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT
        /// </summary>
        [DataMember(Name = "PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT", EmitDefaultValue = true)]
        public bool? PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS
        /// </summary>
        [DataMember(Name = "PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS", EmitDefaultValue = true)]
        public bool? PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXPERIMENTAL_WARN_WORK_POOLS
        /// </summary>
        [DataMember(Name = "PREFECT_EXPERIMENTAL_WARN_WORK_POOLS", EmitDefaultValue = true)]
        public bool? PREFECT_EXPERIMENTAL_WARN_WORK_POOLS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXPERIMENTAL_ENABLE_WORKERS
        /// </summary>
        [DataMember(Name = "PREFECT_EXPERIMENTAL_ENABLE_WORKERS", EmitDefaultValue = true)]
        public bool? PREFECT_EXPERIMENTAL_ENABLE_WORKERS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXPERIMENTAL_WARN_WORKERS
        /// </summary>
        [DataMember(Name = "PREFECT_EXPERIMENTAL_WARN_WORKERS", EmitDefaultValue = true)]
        public bool? PREFECT_EXPERIMENTAL_WARN_WORKERS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXPERIMENTAL_WARN_VISUALIZE
        /// </summary>
        [DataMember(Name = "PREFECT_EXPERIMENTAL_WARN_VISUALIZE", EmitDefaultValue = true)]
        public bool? PREFECT_EXPERIMENTAL_WARN_VISUALIZE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_WORKER_HEARTBEAT_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_WORKER_HEARTBEAT_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_WORKER_HEARTBEAT_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_WORKER_QUERY_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_WORKER_QUERY_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_WORKER_QUERY_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_WORKER_PREFETCH_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_WORKER_PREFETCH_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_WORKER_PREFETCH_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS
        /// </summary>
        [DataMember(Name = "PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS", EmitDefaultValue = true)]
        public bool? PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXPERIMENTAL_WARN_ARTIFACTS
        /// </summary>
        [DataMember(Name = "PREFECT_EXPERIMENTAL_WARN_ARTIFACTS", EmitDefaultValue = true)]
        public bool? PREFECT_EXPERIMENTAL_WARN_ARTIFACTS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD
        /// </summary>
        [DataMember(Name = "PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD", EmitDefaultValue = true)]
        public bool? PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD
        /// </summary>
        [DataMember(Name = "PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD", EmitDefaultValue = true)]
        public bool? PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_ORION_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_ORION_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_LOGGING_ORION_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_ORION_BATCH_INTERVAL
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_ORION_BATCH_INTERVAL", EmitDefaultValue = false)]
        public decimal? PREFECT_LOGGING_ORION_BATCH_INTERVAL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_ORION_BATCH_SIZE
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_ORION_BATCH_SIZE", EmitDefaultValue = false)]
        public int? PREFECT_LOGGING_ORION_BATCH_SIZE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_LOGGING_ORION_MAX_LOG_SIZE
        /// </summary>
        [DataMember(Name = "PREFECT_LOGGING_ORION_MAX_LOG_SIZE", EmitDefaultValue = false)]
        public int? PREFECT_LOGGING_ORION_MAX_LOG_SIZE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_BLOCKS_REGISTER_ON_START
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_BLOCKS_REGISTER_ON_START", EmitDefaultValue = true)]
        public bool? PREFECT_ORION_BLOCKS_REGISTER_ON_START { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_DATABASE_PASSWORD
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_DATABASE_PASSWORD", EmitDefaultValue = false)]
        public string? PREFECT_ORION_DATABASE_PASSWORD { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_DATABASE_CONNECTION_URL
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_DATABASE_CONNECTION_URL", EmitDefaultValue = false)]
        public string? PREFECT_ORION_DATABASE_CONNECTION_URL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_DATABASE_ECHO
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_DATABASE_ECHO", EmitDefaultValue = true)]
        public bool? PREFECT_ORION_DATABASE_ECHO { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_DATABASE_MIGRATE_ON_START
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_DATABASE_MIGRATE_ON_START", EmitDefaultValue = true)]
        public bool? PREFECT_ORION_DATABASE_MIGRATE_ON_START { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_DATABASE_TIMEOUT
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_DATABASE_TIMEOUT", EmitDefaultValue = false)]
        public decimal? PREFECT_ORION_DATABASE_TIMEOUT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT", EmitDefaultValue = false)]
        public decimal? PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE", EmitDefaultValue = false)]
        public int? PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS", EmitDefaultValue = false)]
        public int? PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNS
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNS", EmitDefaultValue = false)]
        public int? PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME", EmitDefaultValue = false)]
        public decimal? PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME", EmitDefaultValue = false)]
        public decimal? PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE", EmitDefaultValue = false)]
        public int? PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS", EmitDefaultValue = false)]
        public decimal? PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_API_DEFAULT_LIMIT
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_API_DEFAULT_LIMIT", EmitDefaultValue = false)]
        public int? PREFECT_ORION_API_DEFAULT_LIMIT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_API_HOST
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_API_HOST", EmitDefaultValue = false)]
        public string? PREFECT_ORION_API_HOST { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_API_PORT
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_API_PORT", EmitDefaultValue = false)]
        public int? PREFECT_ORION_API_PORT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_API_KEEPALIVE_TIMEOUT
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_API_KEEPALIVE_TIMEOUT", EmitDefaultValue = false)]
        public int? PREFECT_ORION_API_KEEPALIVE_TIMEOUT { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_UI_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_UI_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_ORION_UI_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_UI_API_URL
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_UI_API_URL", EmitDefaultValue = false)]
        public string? PREFECT_ORION_UI_API_URL { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_ANALYTICS_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_ANALYTICS_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_ORION_ANALYTICS_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_SCHEDULER_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_SCHEDULER_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_ORION_SERVICES_SCHEDULER_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLED { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTH
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTH", EmitDefaultValue = false)]
        public int? PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTH { get; set; }

        /// <summary>
        /// Gets or Sets PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLED
        /// </summary>
        [DataMember(Name = "PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLED", EmitDefaultValue = true)]
        public bool? PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLED { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Settings {\n");
            sb.Append("  PREFECT_HOME: ").Append(PREFECT_HOME).Append("\n");
            sb.Append("  PREFECT_EXTRA_ENTRYPOINTS: ").Append(PREFECT_EXTRA_ENTRYPOINTS).Append("\n");
            sb.Append("  PREFECT_DEBUG_MODE: ").Append(PREFECT_DEBUG_MODE).Append("\n");
            sb.Append("  PREFECT_CLI_COLORS: ").Append(PREFECT_CLI_COLORS).Append("\n");
            sb.Append("  PREFECT_CLI_PROMPT: ").Append(PREFECT_CLI_PROMPT).Append("\n");
            sb.Append("  PREFECT_CLI_WRAP_LINES: ").Append(PREFECT_CLI_WRAP_LINES).Append("\n");
            sb.Append("  PREFECT_TEST_MODE: ").Append(PREFECT_TEST_MODE).Append("\n");
            sb.Append("  PREFECT_UNIT_TEST_MODE: ").Append(PREFECT_UNIT_TEST_MODE).Append("\n");
            sb.Append("  PREFECT_TEST_SETTING: ").Append(PREFECT_TEST_SETTING).Append("\n");
            sb.Append("  PREFECT_API_TLS_INSECURE_SKIP_VERIFY: ").Append(PREFECT_API_TLS_INSECURE_SKIP_VERIFY).Append("\n");
            sb.Append("  PREFECT_API_URL: ").Append(PREFECT_API_URL).Append("\n");
            sb.Append("  PREFECT_API_KEY: ").Append(PREFECT_API_KEY).Append("\n");
            sb.Append("  PREFECTAPIENABLEHTTP2: ").Append(PREFECTAPIENABLEHTTP2).Append("\n");
            sb.Append("  PREFECT_CLIENT_MAX_RETRIES: ").Append(PREFECT_CLIENT_MAX_RETRIES).Append("\n");
            sb.Append("  PREFECT_CLIENT_RETRY_JITTER_FACTOR: ").Append(PREFECT_CLIENT_RETRY_JITTER_FACTOR).Append("\n");
            sb.Append("  PREFECT_CLIENT_RETRY_EXTRA_CODES: ").Append(PREFECT_CLIENT_RETRY_EXTRA_CODES).Append("\n");
            sb.Append("  PREFECT_CLOUD_API_URL: ").Append(PREFECT_CLOUD_API_URL).Append("\n");
            sb.Append("  PREFECT_CLOUD_URL: ").Append(PREFECT_CLOUD_URL).Append("\n");
            sb.Append("  PREFECT_UI_URL: ").Append(PREFECT_UI_URL).Append("\n");
            sb.Append("  PREFECT_CLOUD_UI_URL: ").Append(PREFECT_CLOUD_UI_URL).Append("\n");
            sb.Append("  PREFECT_API_REQUEST_TIMEOUT: ").Append(PREFECT_API_REQUEST_TIMEOUT).Append("\n");
            sb.Append("  PREFECT_EXPERIMENTAL_WARN: ").Append(PREFECT_EXPERIMENTAL_WARN).Append("\n");
            sb.Append("  PREFECT_PROFILES_PATH: ").Append(PREFECT_PROFILES_PATH).Append("\n");
            sb.Append("  PREFECT_RESULTS_DEFAULT_SERIALIZER: ").Append(PREFECT_RESULTS_DEFAULT_SERIALIZER).Append("\n");
            sb.Append("  PREFECT_RESULTS_PERSIST_BY_DEFAULT: ").Append(PREFECT_RESULTS_PERSIST_BY_DEFAULT).Append("\n");
            sb.Append("  PREFECT_TASKS_REFRESH_CACHE: ").Append(PREFECT_TASKS_REFRESH_CACHE).Append("\n");
            sb.Append("  PREFECT_TASK_DEFAULT_RETRIES: ").Append(PREFECT_TASK_DEFAULT_RETRIES).Append("\n");
            sb.Append("  PREFECT_FLOW_DEFAULT_RETRIES: ").Append(PREFECT_FLOW_DEFAULT_RETRIES).Append("\n");
            sb.Append("  PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS: ").Append(PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS).Append("\n");
            sb.Append("  PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS: ").Append(PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS).Append("\n");
            sb.Append("  PREFECT_LOCAL_STORAGE_PATH: ").Append(PREFECT_LOCAL_STORAGE_PATH).Append("\n");
            sb.Append("  PREFECT_MEMO_STORE_PATH: ").Append(PREFECT_MEMO_STORE_PATH).Append("\n");
            sb.Append("  PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION: ").Append(PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION).Append("\n");
            sb.Append("  PREFECT_LOGGING_LEVEL: ").Append(PREFECT_LOGGING_LEVEL).Append("\n");
            sb.Append("  PREFECT_LOGGING_INTERNAL_LEVEL: ").Append(PREFECT_LOGGING_INTERNAL_LEVEL).Append("\n");
            sb.Append("  PREFECT_LOGGING_SERVER_LEVEL: ").Append(PREFECT_LOGGING_SERVER_LEVEL).Append("\n");
            sb.Append("  PREFECT_LOGGING_SETTINGS_PATH: ").Append(PREFECT_LOGGING_SETTINGS_PATH).Append("\n");
            sb.Append("  PREFECT_LOGGING_EXTRA_LOGGERS: ").Append(PREFECT_LOGGING_EXTRA_LOGGERS).Append("\n");
            sb.Append("  PREFECT_LOGGING_LOG_PRINTS: ").Append(PREFECT_LOGGING_LOG_PRINTS).Append("\n");
            sb.Append("  PREFECT_LOGGING_TO_API_ENABLED: ").Append(PREFECT_LOGGING_TO_API_ENABLED).Append("\n");
            sb.Append("  PREFECT_LOGGING_TO_API_BATCH_INTERVAL: ").Append(PREFECT_LOGGING_TO_API_BATCH_INTERVAL).Append("\n");
            sb.Append("  PREFECT_LOGGING_TO_API_BATCH_SIZE: ").Append(PREFECT_LOGGING_TO_API_BATCH_SIZE).Append("\n");
            sb.Append("  PREFECT_LOGGING_TO_API_MAX_LOG_SIZE: ").Append(PREFECT_LOGGING_TO_API_MAX_LOG_SIZE).Append("\n");
            sb.Append("  PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW: ").Append(PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW).Append("\n");
            sb.Append("  PREFECT_LOGGING_COLORS: ").Append(PREFECT_LOGGING_COLORS).Append("\n");
            sb.Append("  PREFECT_LOGGING_MARKUP: ").Append(PREFECT_LOGGING_MARKUP).Append("\n");
            sb.Append("  PREFECT_AGENT_QUERY_INTERVAL: ").Append(PREFECT_AGENT_QUERY_INTERVAL).Append("\n");
            sb.Append("  PREFECT_AGENT_PREFETCH_SECONDS: ").Append(PREFECT_AGENT_PREFETCH_SECONDS).Append("\n");
            sb.Append("  PREFECT_ASYNC_FETCH_STATE_RESULT: ").Append(PREFECT_ASYNC_FETCH_STATE_RESULT).Append("\n");
            sb.Append("  PREFECT_API_BLOCKS_REGISTER_ON_START: ").Append(PREFECT_API_BLOCKS_REGISTER_ON_START).Append("\n");
            sb.Append("  PREFECT_API_DATABASE_PASSWORD: ").Append(PREFECT_API_DATABASE_PASSWORD).Append("\n");
            sb.Append("  PREFECT_API_DATABASE_CONNECTION_URL: ").Append(PREFECT_API_DATABASE_CONNECTION_URL).Append("\n");
            sb.Append("  PREFECT_API_DATABASE_ECHO: ").Append(PREFECT_API_DATABASE_ECHO).Append("\n");
            sb.Append("  PREFECT_API_DATABASE_MIGRATE_ON_START: ").Append(PREFECT_API_DATABASE_MIGRATE_ON_START).Append("\n");
            sb.Append("  PREFECT_API_DATABASE_TIMEOUT: ").Append(PREFECT_API_DATABASE_TIMEOUT).Append("\n");
            sb.Append("  PREFECT_API_DATABASE_CONNECTION_TIMEOUT: ").Append(PREFECT_API_DATABASE_CONNECTION_TIMEOUT).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS: ").Append(PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE: ").Append(PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS: ").Append(PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS: ").Append(PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME: ").Append(PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME: ").Append(PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE: ").Append(PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS: ").Append(PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS: ").Append(PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS: ").Append(PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS: ").Append(PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS).Append("\n");
            sb.Append("  PREFECT_API_DEFAULT_LIMIT: ").Append(PREFECT_API_DEFAULT_LIMIT).Append("\n");
            sb.Append("  PREFECT_SERVER_API_HOST: ").Append(PREFECT_SERVER_API_HOST).Append("\n");
            sb.Append("  PREFECT_SERVER_API_PORT: ").Append(PREFECT_SERVER_API_PORT).Append("\n");
            sb.Append("  PREFECT_SERVER_API_KEEPALIVE_TIMEOUT: ").Append(PREFECT_SERVER_API_KEEPALIVE_TIMEOUT).Append("\n");
            sb.Append("  PREFECT_UI_ENABLED: ").Append(PREFECT_UI_ENABLED).Append("\n");
            sb.Append("  PREFECT_UI_API_URL: ").Append(PREFECT_UI_API_URL).Append("\n");
            sb.Append("  PREFECT_SERVER_ANALYTICS_ENABLED: ").Append(PREFECT_SERVER_ANALYTICS_ENABLED).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_SCHEDULER_ENABLED: ").Append(PREFECT_API_SERVICES_SCHEDULER_ENABLED).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_LATE_RUNS_ENABLED: ").Append(PREFECT_API_SERVICES_LATE_RUNS_ENABLED).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED: ").Append(PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED: ").Append(PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED).Append("\n");
            sb.Append("  PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH: ").Append(PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH).Append("\n");
            sb.Append("  PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED: ").Append(PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED).Append("\n");
            sb.Append("  PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT: ").Append(PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT).Append("\n");
            sb.Append("  PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT: ").Append(PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT).Append("\n");
            sb.Append("  PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS: ").Append(PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS).Append("\n");
            sb.Append("  PREFECT_EXPERIMENTAL_WARN_WORK_POOLS: ").Append(PREFECT_EXPERIMENTAL_WARN_WORK_POOLS).Append("\n");
            sb.Append("  PREFECT_EXPERIMENTAL_ENABLE_WORKERS: ").Append(PREFECT_EXPERIMENTAL_ENABLE_WORKERS).Append("\n");
            sb.Append("  PREFECT_EXPERIMENTAL_WARN_WORKERS: ").Append(PREFECT_EXPERIMENTAL_WARN_WORKERS).Append("\n");
            sb.Append("  PREFECT_EXPERIMENTAL_WARN_VISUALIZE: ").Append(PREFECT_EXPERIMENTAL_WARN_VISUALIZE).Append("\n");
            sb.Append("  PREFECT_WORKER_HEARTBEAT_SECONDS: ").Append(PREFECT_WORKER_HEARTBEAT_SECONDS).Append("\n");
            sb.Append("  PREFECT_WORKER_QUERY_SECONDS: ").Append(PREFECT_WORKER_QUERY_SECONDS).Append("\n");
            sb.Append("  PREFECT_WORKER_PREFETCH_SECONDS: ").Append(PREFECT_WORKER_PREFETCH_SECONDS).Append("\n");
            sb.Append("  PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS: ").Append(PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS).Append("\n");
            sb.Append("  PREFECT_EXPERIMENTAL_WARN_ARTIFACTS: ").Append(PREFECT_EXPERIMENTAL_WARN_ARTIFACTS).Append("\n");
            sb.Append("  PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD: ").Append(PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD).Append("\n");
            sb.Append("  PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD: ").Append(PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD).Append("\n");
            sb.Append("  PREFECT_LOGGING_ORION_ENABLED: ").Append(PREFECT_LOGGING_ORION_ENABLED).Append("\n");
            sb.Append("  PREFECT_LOGGING_ORION_BATCH_INTERVAL: ").Append(PREFECT_LOGGING_ORION_BATCH_INTERVAL).Append("\n");
            sb.Append("  PREFECT_LOGGING_ORION_BATCH_SIZE: ").Append(PREFECT_LOGGING_ORION_BATCH_SIZE).Append("\n");
            sb.Append("  PREFECT_LOGGING_ORION_MAX_LOG_SIZE: ").Append(PREFECT_LOGGING_ORION_MAX_LOG_SIZE).Append("\n");
            sb.Append("  PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW: ").Append(PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW).Append("\n");
            sb.Append("  PREFECT_ORION_BLOCKS_REGISTER_ON_START: ").Append(PREFECT_ORION_BLOCKS_REGISTER_ON_START).Append("\n");
            sb.Append("  PREFECT_ORION_DATABASE_PASSWORD: ").Append(PREFECT_ORION_DATABASE_PASSWORD).Append("\n");
            sb.Append("  PREFECT_ORION_DATABASE_CONNECTION_URL: ").Append(PREFECT_ORION_DATABASE_CONNECTION_URL).Append("\n");
            sb.Append("  PREFECT_ORION_DATABASE_ECHO: ").Append(PREFECT_ORION_DATABASE_ECHO).Append("\n");
            sb.Append("  PREFECT_ORION_DATABASE_MIGRATE_ON_START: ").Append(PREFECT_ORION_DATABASE_MIGRATE_ON_START).Append("\n");
            sb.Append("  PREFECT_ORION_DATABASE_TIMEOUT: ").Append(PREFECT_ORION_DATABASE_TIMEOUT).Append("\n");
            sb.Append("  PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT: ").Append(PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS: ").Append(PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE: ").Append(PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS: ").Append(PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNS: ").Append(PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNS).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME: ").Append(PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME: ").Append(PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE: ").Append(PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS: ").Append(PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS: ").Append(PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS: ").Append(PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS: ").Append(PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS).Append("\n");
            sb.Append("  PREFECT_ORION_API_DEFAULT_LIMIT: ").Append(PREFECT_ORION_API_DEFAULT_LIMIT).Append("\n");
            sb.Append("  PREFECT_ORION_API_HOST: ").Append(PREFECT_ORION_API_HOST).Append("\n");
            sb.Append("  PREFECT_ORION_API_PORT: ").Append(PREFECT_ORION_API_PORT).Append("\n");
            sb.Append("  PREFECT_ORION_API_KEEPALIVE_TIMEOUT: ").Append(PREFECT_ORION_API_KEEPALIVE_TIMEOUT).Append("\n");
            sb.Append("  PREFECT_ORION_UI_ENABLED: ").Append(PREFECT_ORION_UI_ENABLED).Append("\n");
            sb.Append("  PREFECT_ORION_UI_API_URL: ").Append(PREFECT_ORION_UI_API_URL).Append("\n");
            sb.Append("  PREFECT_ORION_ANALYTICS_ENABLED: ").Append(PREFECT_ORION_ANALYTICS_ENABLED).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_SCHEDULER_ENABLED: ").Append(PREFECT_ORION_SERVICES_SCHEDULER_ENABLED).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED: ").Append(PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED: ").Append(PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLED: ").Append(PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLED).Append("\n");
            sb.Append("  PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTH: ").Append(PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTH).Append("\n");
            sb.Append("  PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLED: ").Append(PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLED).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Settings);
        }

        /// <summary>
        /// Returns true if Settings instances are equal
        /// </summary>
        /// <param name="input">Instance of Settings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Settings input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.PREFECT_HOME == input.PREFECT_HOME ||
                    (this.PREFECT_HOME != null &&
                    this.PREFECT_HOME.Equals(input.PREFECT_HOME))
                ) && 
                (
                    this.PREFECT_EXTRA_ENTRYPOINTS == input.PREFECT_EXTRA_ENTRYPOINTS ||
                    (this.PREFECT_EXTRA_ENTRYPOINTS != null &&
                    this.PREFECT_EXTRA_ENTRYPOINTS.Equals(input.PREFECT_EXTRA_ENTRYPOINTS))
                ) && 
                (
                    this.PREFECT_DEBUG_MODE == input.PREFECT_DEBUG_MODE ||
                    this.PREFECT_DEBUG_MODE.Equals(input.PREFECT_DEBUG_MODE)
                ) && 
                (
                    this.PREFECT_CLI_COLORS == input.PREFECT_CLI_COLORS ||
                    this.PREFECT_CLI_COLORS.Equals(input.PREFECT_CLI_COLORS)
                ) && 
                (
                    this.PREFECT_CLI_PROMPT == input.PREFECT_CLI_PROMPT ||
                    this.PREFECT_CLI_PROMPT.Equals(input.PREFECT_CLI_PROMPT)
                ) && 
                (
                    this.PREFECT_CLI_WRAP_LINES == input.PREFECT_CLI_WRAP_LINES ||
                    this.PREFECT_CLI_WRAP_LINES.Equals(input.PREFECT_CLI_WRAP_LINES)
                ) && 
                (
                    this.PREFECT_TEST_MODE == input.PREFECT_TEST_MODE ||
                    this.PREFECT_TEST_MODE.Equals(input.PREFECT_TEST_MODE)
                ) && 
                (
                    this.PREFECT_UNIT_TEST_MODE == input.PREFECT_UNIT_TEST_MODE ||
                    this.PREFECT_UNIT_TEST_MODE.Equals(input.PREFECT_UNIT_TEST_MODE)
                ) && 
                (
                    this.PREFECT_TEST_SETTING == input.PREFECT_TEST_SETTING ||
                    (this.PREFECT_TEST_SETTING != null &&
                    this.PREFECT_TEST_SETTING.Equals(input.PREFECT_TEST_SETTING))
                ) && 
                (
                    this.PREFECT_API_TLS_INSECURE_SKIP_VERIFY == input.PREFECT_API_TLS_INSECURE_SKIP_VERIFY ||
                    this.PREFECT_API_TLS_INSECURE_SKIP_VERIFY.Equals(input.PREFECT_API_TLS_INSECURE_SKIP_VERIFY)
                ) && 
                (
                    this.PREFECT_API_URL == input.PREFECT_API_URL ||
                    (this.PREFECT_API_URL != null &&
                    this.PREFECT_API_URL.Equals(input.PREFECT_API_URL))
                ) && 
                (
                    this.PREFECT_API_KEY == input.PREFECT_API_KEY ||
                    (this.PREFECT_API_KEY != null &&
                    this.PREFECT_API_KEY.Equals(input.PREFECT_API_KEY))
                ) && 
                (
                    this.PREFECTAPIENABLEHTTP2 == input.PREFECTAPIENABLEHTTP2 ||
                    this.PREFECTAPIENABLEHTTP2.Equals(input.PREFECTAPIENABLEHTTP2)
                ) && 
                (
                    this.PREFECT_CLIENT_MAX_RETRIES == input.PREFECT_CLIENT_MAX_RETRIES ||
                    this.PREFECT_CLIENT_MAX_RETRIES.Equals(input.PREFECT_CLIENT_MAX_RETRIES)
                ) && 
                (
                    this.PREFECT_CLIENT_RETRY_JITTER_FACTOR == input.PREFECT_CLIENT_RETRY_JITTER_FACTOR ||
                    this.PREFECT_CLIENT_RETRY_JITTER_FACTOR.Equals(input.PREFECT_CLIENT_RETRY_JITTER_FACTOR)
                ) && 
                (
                    this.PREFECT_CLIENT_RETRY_EXTRA_CODES == input.PREFECT_CLIENT_RETRY_EXTRA_CODES ||
                    (this.PREFECT_CLIENT_RETRY_EXTRA_CODES != null &&
                    this.PREFECT_CLIENT_RETRY_EXTRA_CODES.Equals(input.PREFECT_CLIENT_RETRY_EXTRA_CODES))
                ) && 
                (
                    this.PREFECT_CLOUD_API_URL == input.PREFECT_CLOUD_API_URL ||
                    (this.PREFECT_CLOUD_API_URL != null &&
                    this.PREFECT_CLOUD_API_URL.Equals(input.PREFECT_CLOUD_API_URL))
                ) && 
                (
                    this.PREFECT_CLOUD_URL == input.PREFECT_CLOUD_URL ||
                    (this.PREFECT_CLOUD_URL != null &&
                    this.PREFECT_CLOUD_URL.Equals(input.PREFECT_CLOUD_URL))
                ) && 
                (
                    this.PREFECT_UI_URL == input.PREFECT_UI_URL ||
                    (this.PREFECT_UI_URL != null &&
                    this.PREFECT_UI_URL.Equals(input.PREFECT_UI_URL))
                ) && 
                (
                    this.PREFECT_CLOUD_UI_URL == input.PREFECT_CLOUD_UI_URL ||
                    (this.PREFECT_CLOUD_UI_URL != null &&
                    this.PREFECT_CLOUD_UI_URL.Equals(input.PREFECT_CLOUD_UI_URL))
                ) && 
                (
                    this.PREFECT_API_REQUEST_TIMEOUT == input.PREFECT_API_REQUEST_TIMEOUT ||
                    this.PREFECT_API_REQUEST_TIMEOUT.Equals(input.PREFECT_API_REQUEST_TIMEOUT)
                ) && 
                (
                    this.PREFECT_EXPERIMENTAL_WARN == input.PREFECT_EXPERIMENTAL_WARN ||
                    this.PREFECT_EXPERIMENTAL_WARN.Equals(input.PREFECT_EXPERIMENTAL_WARN)
                ) && 
                (
                    this.PREFECT_PROFILES_PATH == input.PREFECT_PROFILES_PATH ||
                    (this.PREFECT_PROFILES_PATH != null &&
                    this.PREFECT_PROFILES_PATH.Equals(input.PREFECT_PROFILES_PATH))
                ) && 
                (
                    this.PREFECT_RESULTS_DEFAULT_SERIALIZER == input.PREFECT_RESULTS_DEFAULT_SERIALIZER ||
                    (this.PREFECT_RESULTS_DEFAULT_SERIALIZER != null &&
                    this.PREFECT_RESULTS_DEFAULT_SERIALIZER.Equals(input.PREFECT_RESULTS_DEFAULT_SERIALIZER))
                ) && 
                (
                    this.PREFECT_RESULTS_PERSIST_BY_DEFAULT == input.PREFECT_RESULTS_PERSIST_BY_DEFAULT ||
                    this.PREFECT_RESULTS_PERSIST_BY_DEFAULT.Equals(input.PREFECT_RESULTS_PERSIST_BY_DEFAULT)
                ) && 
                (
                    this.PREFECT_TASKS_REFRESH_CACHE == input.PREFECT_TASKS_REFRESH_CACHE ||
                    this.PREFECT_TASKS_REFRESH_CACHE.Equals(input.PREFECT_TASKS_REFRESH_CACHE)
                ) && 
                (
                    this.PREFECT_TASK_DEFAULT_RETRIES == input.PREFECT_TASK_DEFAULT_RETRIES ||
                    this.PREFECT_TASK_DEFAULT_RETRIES.Equals(input.PREFECT_TASK_DEFAULT_RETRIES)
                ) && 
                (
                    this.PREFECT_FLOW_DEFAULT_RETRIES == input.PREFECT_FLOW_DEFAULT_RETRIES ||
                    this.PREFECT_FLOW_DEFAULT_RETRIES.Equals(input.PREFECT_FLOW_DEFAULT_RETRIES)
                ) && 
                (
                    this.PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS == input.PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS ||
                    (this.PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS != null &&
                    this.PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS.Equals(input.PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS))
                ) && 
                (
                    this.PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS == input.PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS ||
                    (this.PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS != null &&
                    this.PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS.Equals(input.PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS))
                ) && 
                (
                    this.PREFECT_LOCAL_STORAGE_PATH == input.PREFECT_LOCAL_STORAGE_PATH ||
                    (this.PREFECT_LOCAL_STORAGE_PATH != null &&
                    this.PREFECT_LOCAL_STORAGE_PATH.Equals(input.PREFECT_LOCAL_STORAGE_PATH))
                ) && 
                (
                    this.PREFECT_MEMO_STORE_PATH == input.PREFECT_MEMO_STORE_PATH ||
                    (this.PREFECT_MEMO_STORE_PATH != null &&
                    this.PREFECT_MEMO_STORE_PATH.Equals(input.PREFECT_MEMO_STORE_PATH))
                ) && 
                (
                    this.PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION == input.PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION ||
                    this.PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION.Equals(input.PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION)
                ) && 
                (
                    this.PREFECT_LOGGING_LEVEL == input.PREFECT_LOGGING_LEVEL ||
                    (this.PREFECT_LOGGING_LEVEL != null &&
                    this.PREFECT_LOGGING_LEVEL.Equals(input.PREFECT_LOGGING_LEVEL))
                ) && 
                (
                    this.PREFECT_LOGGING_INTERNAL_LEVEL == input.PREFECT_LOGGING_INTERNAL_LEVEL ||
                    (this.PREFECT_LOGGING_INTERNAL_LEVEL != null &&
                    this.PREFECT_LOGGING_INTERNAL_LEVEL.Equals(input.PREFECT_LOGGING_INTERNAL_LEVEL))
                ) && 
                (
                    this.PREFECT_LOGGING_SERVER_LEVEL == input.PREFECT_LOGGING_SERVER_LEVEL ||
                    (this.PREFECT_LOGGING_SERVER_LEVEL != null &&
                    this.PREFECT_LOGGING_SERVER_LEVEL.Equals(input.PREFECT_LOGGING_SERVER_LEVEL))
                ) && 
                (
                    this.PREFECT_LOGGING_SETTINGS_PATH == input.PREFECT_LOGGING_SETTINGS_PATH ||
                    (this.PREFECT_LOGGING_SETTINGS_PATH != null &&
                    this.PREFECT_LOGGING_SETTINGS_PATH.Equals(input.PREFECT_LOGGING_SETTINGS_PATH))
                ) && 
                (
                    this.PREFECT_LOGGING_EXTRA_LOGGERS == input.PREFECT_LOGGING_EXTRA_LOGGERS ||
                    (this.PREFECT_LOGGING_EXTRA_LOGGERS != null &&
                    this.PREFECT_LOGGING_EXTRA_LOGGERS.Equals(input.PREFECT_LOGGING_EXTRA_LOGGERS))
                ) && 
                (
                    this.PREFECT_LOGGING_LOG_PRINTS == input.PREFECT_LOGGING_LOG_PRINTS ||
                    this.PREFECT_LOGGING_LOG_PRINTS.Equals(input.PREFECT_LOGGING_LOG_PRINTS)
                ) && 
                (
                    this.PREFECT_LOGGING_TO_API_ENABLED == input.PREFECT_LOGGING_TO_API_ENABLED ||
                    this.PREFECT_LOGGING_TO_API_ENABLED.Equals(input.PREFECT_LOGGING_TO_API_ENABLED)
                ) && 
                (
                    this.PREFECT_LOGGING_TO_API_BATCH_INTERVAL == input.PREFECT_LOGGING_TO_API_BATCH_INTERVAL ||
                    this.PREFECT_LOGGING_TO_API_BATCH_INTERVAL.Equals(input.PREFECT_LOGGING_TO_API_BATCH_INTERVAL)
                ) && 
                (
                    this.PREFECT_LOGGING_TO_API_BATCH_SIZE == input.PREFECT_LOGGING_TO_API_BATCH_SIZE ||
                    this.PREFECT_LOGGING_TO_API_BATCH_SIZE.Equals(input.PREFECT_LOGGING_TO_API_BATCH_SIZE)
                ) && 
                (
                    this.PREFECT_LOGGING_TO_API_MAX_LOG_SIZE == input.PREFECT_LOGGING_TO_API_MAX_LOG_SIZE ||
                    this.PREFECT_LOGGING_TO_API_MAX_LOG_SIZE.Equals(input.PREFECT_LOGGING_TO_API_MAX_LOG_SIZE)
                ) && 
                (
                    this.PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW == input.PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW ||
                    this.PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW.Equals(input.PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW)
                ) && 
                (
                    this.PREFECT_LOGGING_COLORS == input.PREFECT_LOGGING_COLORS ||
                    this.PREFECT_LOGGING_COLORS.Equals(input.PREFECT_LOGGING_COLORS)
                ) && 
                (
                    this.PREFECT_LOGGING_MARKUP == input.PREFECT_LOGGING_MARKUP ||
                    this.PREFECT_LOGGING_MARKUP.Equals(input.PREFECT_LOGGING_MARKUP)
                ) && 
                (
                    this.PREFECT_AGENT_QUERY_INTERVAL == input.PREFECT_AGENT_QUERY_INTERVAL ||
                    this.PREFECT_AGENT_QUERY_INTERVAL.Equals(input.PREFECT_AGENT_QUERY_INTERVAL)
                ) && 
                (
                    this.PREFECT_AGENT_PREFETCH_SECONDS == input.PREFECT_AGENT_PREFETCH_SECONDS ||
                    this.PREFECT_AGENT_PREFETCH_SECONDS.Equals(input.PREFECT_AGENT_PREFETCH_SECONDS)
                ) && 
                (
                    this.PREFECT_ASYNC_FETCH_STATE_RESULT == input.PREFECT_ASYNC_FETCH_STATE_RESULT ||
                    this.PREFECT_ASYNC_FETCH_STATE_RESULT.Equals(input.PREFECT_ASYNC_FETCH_STATE_RESULT)
                ) && 
                (
                    this.PREFECT_API_BLOCKS_REGISTER_ON_START == input.PREFECT_API_BLOCKS_REGISTER_ON_START ||
                    this.PREFECT_API_BLOCKS_REGISTER_ON_START.Equals(input.PREFECT_API_BLOCKS_REGISTER_ON_START)
                ) && 
                (
                    this.PREFECT_API_DATABASE_PASSWORD == input.PREFECT_API_DATABASE_PASSWORD ||
                    (this.PREFECT_API_DATABASE_PASSWORD != null &&
                    this.PREFECT_API_DATABASE_PASSWORD.Equals(input.PREFECT_API_DATABASE_PASSWORD))
                ) && 
                (
                    this.PREFECT_API_DATABASE_CONNECTION_URL == input.PREFECT_API_DATABASE_CONNECTION_URL ||
                    (this.PREFECT_API_DATABASE_CONNECTION_URL != null &&
                    this.PREFECT_API_DATABASE_CONNECTION_URL.Equals(input.PREFECT_API_DATABASE_CONNECTION_URL))
                ) && 
                (
                    this.PREFECT_API_DATABASE_ECHO == input.PREFECT_API_DATABASE_ECHO ||
                    this.PREFECT_API_DATABASE_ECHO.Equals(input.PREFECT_API_DATABASE_ECHO)
                ) && 
                (
                    this.PREFECT_API_DATABASE_MIGRATE_ON_START == input.PREFECT_API_DATABASE_MIGRATE_ON_START ||
                    this.PREFECT_API_DATABASE_MIGRATE_ON_START.Equals(input.PREFECT_API_DATABASE_MIGRATE_ON_START)
                ) && 
                (
                    this.PREFECT_API_DATABASE_TIMEOUT == input.PREFECT_API_DATABASE_TIMEOUT ||
                    this.PREFECT_API_DATABASE_TIMEOUT.Equals(input.PREFECT_API_DATABASE_TIMEOUT)
                ) && 
                (
                    this.PREFECT_API_DATABASE_CONNECTION_TIMEOUT == input.PREFECT_API_DATABASE_CONNECTION_TIMEOUT ||
                    this.PREFECT_API_DATABASE_CONNECTION_TIMEOUT.Equals(input.PREFECT_API_DATABASE_CONNECTION_TIMEOUT)
                ) && 
                (
                    this.PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS == input.PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS ||
                    this.PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS.Equals(input.PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS)
                ) && 
                (
                    this.PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE == input.PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE ||
                    this.PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE.Equals(input.PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE)
                ) && 
                (
                    this.PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS == input.PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS ||
                    this.PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS.Equals(input.PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS)
                ) && 
                (
                    this.PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS == input.PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS ||
                    this.PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS.Equals(input.PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS)
                ) && 
                (
                    this.PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME == input.PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME ||
                    this.PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME.Equals(input.PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME)
                ) && 
                (
                    this.PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME == input.PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME ||
                    this.PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME.Equals(input.PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME)
                ) && 
                (
                    this.PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE == input.PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE ||
                    this.PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE.Equals(input.PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE)
                ) && 
                (
                    this.PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS == input.PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS ||
                    this.PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS.Equals(input.PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS)
                ) && 
                (
                    this.PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS == input.PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS ||
                    this.PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS.Equals(input.PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS)
                ) && 
                (
                    this.PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS == input.PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS ||
                    this.PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS.Equals(input.PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS)
                ) && 
                (
                    this.PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS == input.PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS ||
                    this.PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS.Equals(input.PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS)
                ) && 
                (
                    this.PREFECT_API_DEFAULT_LIMIT == input.PREFECT_API_DEFAULT_LIMIT ||
                    this.PREFECT_API_DEFAULT_LIMIT.Equals(input.PREFECT_API_DEFAULT_LIMIT)
                ) && 
                (
                    this.PREFECT_SERVER_API_HOST == input.PREFECT_SERVER_API_HOST ||
                    (this.PREFECT_SERVER_API_HOST != null &&
                    this.PREFECT_SERVER_API_HOST.Equals(input.PREFECT_SERVER_API_HOST))
                ) && 
                (
                    this.PREFECT_SERVER_API_PORT == input.PREFECT_SERVER_API_PORT ||
                    this.PREFECT_SERVER_API_PORT.Equals(input.PREFECT_SERVER_API_PORT)
                ) && 
                (
                    this.PREFECT_SERVER_API_KEEPALIVE_TIMEOUT == input.PREFECT_SERVER_API_KEEPALIVE_TIMEOUT ||
                    this.PREFECT_SERVER_API_KEEPALIVE_TIMEOUT.Equals(input.PREFECT_SERVER_API_KEEPALIVE_TIMEOUT)
                ) && 
                (
                    this.PREFECT_UI_ENABLED == input.PREFECT_UI_ENABLED ||
                    this.PREFECT_UI_ENABLED.Equals(input.PREFECT_UI_ENABLED)
                ) && 
                (
                    this.PREFECT_UI_API_URL == input.PREFECT_UI_API_URL ||
                    (this.PREFECT_UI_API_URL != null &&
                    this.PREFECT_UI_API_URL.Equals(input.PREFECT_UI_API_URL))
                ) && 
                (
                    this.PREFECT_SERVER_ANALYTICS_ENABLED == input.PREFECT_SERVER_ANALYTICS_ENABLED ||
                    this.PREFECT_SERVER_ANALYTICS_ENABLED.Equals(input.PREFECT_SERVER_ANALYTICS_ENABLED)
                ) && 
                (
                    this.PREFECT_API_SERVICES_SCHEDULER_ENABLED == input.PREFECT_API_SERVICES_SCHEDULER_ENABLED ||
                    this.PREFECT_API_SERVICES_SCHEDULER_ENABLED.Equals(input.PREFECT_API_SERVICES_SCHEDULER_ENABLED)
                ) && 
                (
                    this.PREFECT_API_SERVICES_LATE_RUNS_ENABLED == input.PREFECT_API_SERVICES_LATE_RUNS_ENABLED ||
                    this.PREFECT_API_SERVICES_LATE_RUNS_ENABLED.Equals(input.PREFECT_API_SERVICES_LATE_RUNS_ENABLED)
                ) && 
                (
                    this.PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED == input.PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED ||
                    this.PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED.Equals(input.PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED)
                ) && 
                (
                    this.PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED == input.PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED ||
                    this.PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED.Equals(input.PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED)
                ) && 
                (
                    this.PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH == input.PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH ||
                    this.PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH.Equals(input.PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH)
                ) && 
                (
                    this.PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED == input.PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED ||
                    this.PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED.Equals(input.PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED)
                ) && 
                (
                    this.PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT == input.PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT ||
                    this.PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT.Equals(input.PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT)
                ) && 
                (
                    this.PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT == input.PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT ||
                    this.PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT.Equals(input.PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT)
                ) && 
                (
                    this.PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS == input.PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS ||
                    this.PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS.Equals(input.PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS)
                ) && 
                (
                    this.PREFECT_EXPERIMENTAL_WARN_WORK_POOLS == input.PREFECT_EXPERIMENTAL_WARN_WORK_POOLS ||
                    this.PREFECT_EXPERIMENTAL_WARN_WORK_POOLS.Equals(input.PREFECT_EXPERIMENTAL_WARN_WORK_POOLS)
                ) && 
                (
                    this.PREFECT_EXPERIMENTAL_ENABLE_WORKERS == input.PREFECT_EXPERIMENTAL_ENABLE_WORKERS ||
                    this.PREFECT_EXPERIMENTAL_ENABLE_WORKERS.Equals(input.PREFECT_EXPERIMENTAL_ENABLE_WORKERS)
                ) && 
                (
                    this.PREFECT_EXPERIMENTAL_WARN_WORKERS == input.PREFECT_EXPERIMENTAL_WARN_WORKERS ||
                    this.PREFECT_EXPERIMENTAL_WARN_WORKERS.Equals(input.PREFECT_EXPERIMENTAL_WARN_WORKERS)
                ) && 
                (
                    this.PREFECT_EXPERIMENTAL_WARN_VISUALIZE == input.PREFECT_EXPERIMENTAL_WARN_VISUALIZE ||
                    this.PREFECT_EXPERIMENTAL_WARN_VISUALIZE.Equals(input.PREFECT_EXPERIMENTAL_WARN_VISUALIZE)
                ) && 
                (
                    this.PREFECT_WORKER_HEARTBEAT_SECONDS == input.PREFECT_WORKER_HEARTBEAT_SECONDS ||
                    this.PREFECT_WORKER_HEARTBEAT_SECONDS.Equals(input.PREFECT_WORKER_HEARTBEAT_SECONDS)
                ) && 
                (
                    this.PREFECT_WORKER_QUERY_SECONDS == input.PREFECT_WORKER_QUERY_SECONDS ||
                    this.PREFECT_WORKER_QUERY_SECONDS.Equals(input.PREFECT_WORKER_QUERY_SECONDS)
                ) && 
                (
                    this.PREFECT_WORKER_PREFETCH_SECONDS == input.PREFECT_WORKER_PREFETCH_SECONDS ||
                    this.PREFECT_WORKER_PREFETCH_SECONDS.Equals(input.PREFECT_WORKER_PREFETCH_SECONDS)
                ) && 
                (
                    this.PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS == input.PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS ||
                    this.PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS.Equals(input.PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS)
                ) && 
                (
                    this.PREFECT_EXPERIMENTAL_WARN_ARTIFACTS == input.PREFECT_EXPERIMENTAL_WARN_ARTIFACTS ||
                    this.PREFECT_EXPERIMENTAL_WARN_ARTIFACTS.Equals(input.PREFECT_EXPERIMENTAL_WARN_ARTIFACTS)
                ) && 
                (
                    this.PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD == input.PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD ||
                    this.PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD.Equals(input.PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD)
                ) && 
                (
                    this.PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD == input.PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD ||
                    this.PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD.Equals(input.PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD)
                ) && 
                (
                    this.PREFECT_LOGGING_ORION_ENABLED == input.PREFECT_LOGGING_ORION_ENABLED ||
                    this.PREFECT_LOGGING_ORION_ENABLED.Equals(input.PREFECT_LOGGING_ORION_ENABLED)
                ) && 
                (
                    this.PREFECT_LOGGING_ORION_BATCH_INTERVAL == input.PREFECT_LOGGING_ORION_BATCH_INTERVAL ||
                    this.PREFECT_LOGGING_ORION_BATCH_INTERVAL.Equals(input.PREFECT_LOGGING_ORION_BATCH_INTERVAL)
                ) && 
                (
                    this.PREFECT_LOGGING_ORION_BATCH_SIZE == input.PREFECT_LOGGING_ORION_BATCH_SIZE ||
                    this.PREFECT_LOGGING_ORION_BATCH_SIZE.Equals(input.PREFECT_LOGGING_ORION_BATCH_SIZE)
                ) && 
                (
                    this.PREFECT_LOGGING_ORION_MAX_LOG_SIZE == input.PREFECT_LOGGING_ORION_MAX_LOG_SIZE ||
                    this.PREFECT_LOGGING_ORION_MAX_LOG_SIZE.Equals(input.PREFECT_LOGGING_ORION_MAX_LOG_SIZE)
                ) && 
                (
                    this.PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW == input.PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW ||
                    this.PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW.Equals(input.PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW)
                ) && 
                (
                    this.PREFECT_ORION_BLOCKS_REGISTER_ON_START == input.PREFECT_ORION_BLOCKS_REGISTER_ON_START ||
                    this.PREFECT_ORION_BLOCKS_REGISTER_ON_START.Equals(input.PREFECT_ORION_BLOCKS_REGISTER_ON_START)
                ) && 
                (
                    this.PREFECT_ORION_DATABASE_PASSWORD == input.PREFECT_ORION_DATABASE_PASSWORD ||
                    (this.PREFECT_ORION_DATABASE_PASSWORD != null &&
                    this.PREFECT_ORION_DATABASE_PASSWORD.Equals(input.PREFECT_ORION_DATABASE_PASSWORD))
                ) && 
                (
                    this.PREFECT_ORION_DATABASE_CONNECTION_URL == input.PREFECT_ORION_DATABASE_CONNECTION_URL ||
                    (this.PREFECT_ORION_DATABASE_CONNECTION_URL != null &&
                    this.PREFECT_ORION_DATABASE_CONNECTION_URL.Equals(input.PREFECT_ORION_DATABASE_CONNECTION_URL))
                ) && 
                (
                    this.PREFECT_ORION_DATABASE_ECHO == input.PREFECT_ORION_DATABASE_ECHO ||
                    this.PREFECT_ORION_DATABASE_ECHO.Equals(input.PREFECT_ORION_DATABASE_ECHO)
                ) && 
                (
                    this.PREFECT_ORION_DATABASE_MIGRATE_ON_START == input.PREFECT_ORION_DATABASE_MIGRATE_ON_START ||
                    this.PREFECT_ORION_DATABASE_MIGRATE_ON_START.Equals(input.PREFECT_ORION_DATABASE_MIGRATE_ON_START)
                ) && 
                (
                    this.PREFECT_ORION_DATABASE_TIMEOUT == input.PREFECT_ORION_DATABASE_TIMEOUT ||
                    this.PREFECT_ORION_DATABASE_TIMEOUT.Equals(input.PREFECT_ORION_DATABASE_TIMEOUT)
                ) && 
                (
                    this.PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT == input.PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT ||
                    this.PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT.Equals(input.PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS == input.PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS ||
                    this.PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS.Equals(input.PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE == input.PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE ||
                    this.PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE.Equals(input.PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS == input.PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS ||
                    this.PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS.Equals(input.PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNS == input.PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNS ||
                    this.PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNS.Equals(input.PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNS)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME == input.PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME ||
                    this.PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME.Equals(input.PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME == input.PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME ||
                    this.PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME.Equals(input.PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE == input.PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE ||
                    this.PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE.Equals(input.PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS == input.PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS ||
                    this.PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS.Equals(input.PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS == input.PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS ||
                    this.PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS.Equals(input.PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS == input.PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS ||
                    this.PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS.Equals(input.PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS == input.PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS ||
                    this.PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS.Equals(input.PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS)
                ) && 
                (
                    this.PREFECT_ORION_API_DEFAULT_LIMIT == input.PREFECT_ORION_API_DEFAULT_LIMIT ||
                    this.PREFECT_ORION_API_DEFAULT_LIMIT.Equals(input.PREFECT_ORION_API_DEFAULT_LIMIT)
                ) && 
                (
                    this.PREFECT_ORION_API_HOST == input.PREFECT_ORION_API_HOST ||
                    (this.PREFECT_ORION_API_HOST != null &&
                    this.PREFECT_ORION_API_HOST.Equals(input.PREFECT_ORION_API_HOST))
                ) && 
                (
                    this.PREFECT_ORION_API_PORT == input.PREFECT_ORION_API_PORT ||
                    this.PREFECT_ORION_API_PORT.Equals(input.PREFECT_ORION_API_PORT)
                ) && 
                (
                    this.PREFECT_ORION_API_KEEPALIVE_TIMEOUT == input.PREFECT_ORION_API_KEEPALIVE_TIMEOUT ||
                    this.PREFECT_ORION_API_KEEPALIVE_TIMEOUT.Equals(input.PREFECT_ORION_API_KEEPALIVE_TIMEOUT)
                ) && 
                (
                    this.PREFECT_ORION_UI_ENABLED == input.PREFECT_ORION_UI_ENABLED ||
                    this.PREFECT_ORION_UI_ENABLED.Equals(input.PREFECT_ORION_UI_ENABLED)
                ) && 
                (
                    this.PREFECT_ORION_UI_API_URL == input.PREFECT_ORION_UI_API_URL ||
                    (this.PREFECT_ORION_UI_API_URL != null &&
                    this.PREFECT_ORION_UI_API_URL.Equals(input.PREFECT_ORION_UI_API_URL))
                ) && 
                (
                    this.PREFECT_ORION_ANALYTICS_ENABLED == input.PREFECT_ORION_ANALYTICS_ENABLED ||
                    this.PREFECT_ORION_ANALYTICS_ENABLED.Equals(input.PREFECT_ORION_ANALYTICS_ENABLED)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_SCHEDULER_ENABLED == input.PREFECT_ORION_SERVICES_SCHEDULER_ENABLED ||
                    this.PREFECT_ORION_SERVICES_SCHEDULER_ENABLED.Equals(input.PREFECT_ORION_SERVICES_SCHEDULER_ENABLED)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED == input.PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED ||
                    this.PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED.Equals(input.PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED == input.PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED ||
                    this.PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED.Equals(input.PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLED == input.PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLED ||
                    this.PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLED.Equals(input.PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLED)
                ) && 
                (
                    this.PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTH == input.PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTH ||
                    this.PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTH.Equals(input.PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTH)
                ) && 
                (
                    this.PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLED == input.PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLED ||
                    this.PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLED.Equals(input.PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLED)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PREFECT_HOME != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_HOME.GetHashCode();
                }
                if (this.PREFECT_EXTRA_ENTRYPOINTS != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_EXTRA_ENTRYPOINTS.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECT_DEBUG_MODE.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_CLI_COLORS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_CLI_PROMPT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_CLI_WRAP_LINES.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_TEST_MODE.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_UNIT_TEST_MODE.GetHashCode();
                if (this.PREFECT_TEST_SETTING != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_TEST_SETTING.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECT_API_TLS_INSECURE_SKIP_VERIFY.GetHashCode();
                if (this.PREFECT_API_URL != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_API_URL.GetHashCode();
                }
                if (this.PREFECT_API_KEY != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_API_KEY.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECTAPIENABLEHTTP2.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_CLIENT_MAX_RETRIES.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_CLIENT_RETRY_JITTER_FACTOR.GetHashCode();
                if (this.PREFECT_CLIENT_RETRY_EXTRA_CODES != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_CLIENT_RETRY_EXTRA_CODES.GetHashCode();
                }
                if (this.PREFECT_CLOUD_API_URL != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_CLOUD_API_URL.GetHashCode();
                }
                if (this.PREFECT_CLOUD_URL != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_CLOUD_URL.GetHashCode();
                }
                if (this.PREFECT_UI_URL != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_UI_URL.GetHashCode();
                }
                if (this.PREFECT_CLOUD_UI_URL != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_CLOUD_UI_URL.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECT_API_REQUEST_TIMEOUT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_EXPERIMENTAL_WARN.GetHashCode();
                if (this.PREFECT_PROFILES_PATH != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_PROFILES_PATH.GetHashCode();
                }
                if (this.PREFECT_RESULTS_DEFAULT_SERIALIZER != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_RESULTS_DEFAULT_SERIALIZER.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECT_RESULTS_PERSIST_BY_DEFAULT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_TASKS_REFRESH_CACHE.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_TASK_DEFAULT_RETRIES.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_FLOW_DEFAULT_RETRIES.GetHashCode();
                if (this.PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS.GetHashCode();
                }
                if (this.PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS.GetHashCode();
                }
                if (this.PREFECT_LOCAL_STORAGE_PATH != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_LOCAL_STORAGE_PATH.GetHashCode();
                }
                if (this.PREFECT_MEMO_STORE_PATH != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_MEMO_STORE_PATH.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION.GetHashCode();
                if (this.PREFECT_LOGGING_LEVEL != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_LOGGING_LEVEL.GetHashCode();
                }
                if (this.PREFECT_LOGGING_INTERNAL_LEVEL != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_LOGGING_INTERNAL_LEVEL.GetHashCode();
                }
                if (this.PREFECT_LOGGING_SERVER_LEVEL != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_LOGGING_SERVER_LEVEL.GetHashCode();
                }
                if (this.PREFECT_LOGGING_SETTINGS_PATH != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_LOGGING_SETTINGS_PATH.GetHashCode();
                }
                if (this.PREFECT_LOGGING_EXTRA_LOGGERS != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_LOGGING_EXTRA_LOGGERS.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_LOG_PRINTS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_TO_API_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_TO_API_BATCH_INTERVAL.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_TO_API_BATCH_SIZE.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_TO_API_MAX_LOG_SIZE.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_COLORS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_MARKUP.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_AGENT_QUERY_INTERVAL.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_AGENT_PREFETCH_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ASYNC_FETCH_STATE_RESULT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_BLOCKS_REGISTER_ON_START.GetHashCode();
                if (this.PREFECT_API_DATABASE_PASSWORD != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_API_DATABASE_PASSWORD.GetHashCode();
                }
                if (this.PREFECT_API_DATABASE_CONNECTION_URL != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_API_DATABASE_CONNECTION_URL.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECT_API_DATABASE_ECHO.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_DATABASE_MIGRATE_ON_START.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_DATABASE_TIMEOUT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_DATABASE_CONNECTION_TIMEOUT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_DEFAULT_LIMIT.GetHashCode();
                if (this.PREFECT_SERVER_API_HOST != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_SERVER_API_HOST.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECT_SERVER_API_PORT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_SERVER_API_KEEPALIVE_TIMEOUT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_UI_ENABLED.GetHashCode();
                if (this.PREFECT_UI_API_URL != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_UI_API_URL.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECT_SERVER_ANALYTICS_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_SCHEDULER_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_LATE_RUNS_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_EXPERIMENTAL_WARN_WORK_POOLS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_EXPERIMENTAL_ENABLE_WORKERS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_EXPERIMENTAL_WARN_WORKERS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_EXPERIMENTAL_WARN_VISUALIZE.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_WORKER_HEARTBEAT_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_WORKER_QUERY_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_WORKER_PREFETCH_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_EXPERIMENTAL_WARN_ARTIFACTS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_ORION_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_ORION_BATCH_INTERVAL.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_ORION_BATCH_SIZE.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_ORION_MAX_LOG_SIZE.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_BLOCKS_REGISTER_ON_START.GetHashCode();
                if (this.PREFECT_ORION_DATABASE_PASSWORD != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_ORION_DATABASE_PASSWORD.GetHashCode();
                }
                if (this.PREFECT_ORION_DATABASE_CONNECTION_URL != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_ORION_DATABASE_CONNECTION_URL.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECT_ORION_DATABASE_ECHO.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_DATABASE_MIGRATE_ON_START.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_DATABASE_TIMEOUT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_API_DEFAULT_LIMIT.GetHashCode();
                if (this.PREFECT_ORION_API_HOST != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_ORION_API_HOST.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECT_ORION_API_PORT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_API_KEEPALIVE_TIMEOUT.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_UI_ENABLED.GetHashCode();
                if (this.PREFECT_ORION_UI_API_URL != null)
                {
                    hashCode = (hashCode * 59) + this.PREFECT_ORION_UI_API_URL.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.PREFECT_ORION_ANALYTICS_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_SCHEDULER_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLED.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTH.GetHashCode();
                hashCode = (hashCode * 59) + this.PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLED.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
