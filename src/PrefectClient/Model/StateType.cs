/*
 * Prefect API Client for .NET
 *
 * For more information, visit: https://github.com/rpeden/prefect-client-dotnet
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = PrefectClient.Client.FileParameter;
using OpenAPIDateConverter = PrefectClient.Client.OpenAPIDateConverter;

namespace PrefectClient.Model
{
    /// <summary>
    /// Enumeration of state types.
    /// </summary>
    /// <value>Enumeration of state types.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum StateType
    {
        /// <summary>
        /// Enum Scheduled for value: SCHEDULED
        /// </summary>
        [EnumMember(Value = "SCHEDULED")]
        Scheduled = 1,

        /// <summary>
        /// Enum Pending for value: PENDING
        /// </summary>
        [EnumMember(Value = "PENDING")]
        Pending = 2,

        /// <summary>
        /// Enum Running for value: RUNNING
        /// </summary>
        [EnumMember(Value = "RUNNING")]
        Running = 3,

        /// <summary>
        /// Enum Completed for value: COMPLETED
        /// </summary>
        [EnumMember(Value = "COMPLETED")]
        Completed = 4,

        /// <summary>
        /// Enum Failed for value: FAILED
        /// </summary>
        [EnumMember(Value = "FAILED")]
        Failed = 5,

        /// <summary>
        /// Enum Cancelled for value: CANCELLED
        /// </summary>
        [EnumMember(Value = "CANCELLED")]
        Cancelled = 6,

        /// <summary>
        /// Enum Crashed for value: CRASHED
        /// </summary>
        [EnumMember(Value = "CRASHED")]
        Crashed = 7,

        /// <summary>
        /// Enum Paused for value: PAUSED
        /// </summary>
        [EnumMember(Value = "PAUSED")]
        Paused = 8,

        /// <summary>
        /// Enum Cancelling for value: CANCELLING
        /// </summary>
        [EnumMember(Value = "CANCELLING")]
        Cancelling = 9
    }

}
