/*
 * Prefect API Client for .NET
 *
 * For more information, visit: https://github.com/rpeden/prefect-client-dotnet
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using PrefectClient.Model;
using PrefectClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace PrefectClient.Test.Model
{
    /// <summary>
    ///  Class for testing Settings
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SettingsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Settings
        //private Settings instance;

        public SettingsTests()
        {
            // TODO uncomment below to create an instance of Settings
            //instance = new Settings();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Settings
        /// </summary>
        [Fact]
        public void SettingsInstanceTest()
        {
            // TODO uncomment below to test "IsType" Settings
            //Assert.IsType<Settings>(instance);
        }

        /// <summary>
        /// Test the property 'PREFECT_HOME'
        /// </summary>
        [Fact]
        public void PREFECT_HOMETest()
        {
            // TODO unit test for the property 'PREFECT_HOME'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXTRA_ENTRYPOINTS'
        /// </summary>
        [Fact]
        public void PREFECT_EXTRA_ENTRYPOINTSTest()
        {
            // TODO unit test for the property 'PREFECT_EXTRA_ENTRYPOINTS'
        }

        /// <summary>
        /// Test the property 'PREFECT_DEBUG_MODE'
        /// </summary>
        [Fact]
        public void PREFECT_DEBUG_MODETest()
        {
            // TODO unit test for the property 'PREFECT_DEBUG_MODE'
        }

        /// <summary>
        /// Test the property 'PREFECT_CLI_COLORS'
        /// </summary>
        [Fact]
        public void PREFECT_CLI_COLORSTest()
        {
            // TODO unit test for the property 'PREFECT_CLI_COLORS'
        }

        /// <summary>
        /// Test the property 'PREFECT_CLI_PROMPT'
        /// </summary>
        [Fact]
        public void PREFECT_CLI_PROMPTTest()
        {
            // TODO unit test for the property 'PREFECT_CLI_PROMPT'
        }

        /// <summary>
        /// Test the property 'PREFECT_CLI_WRAP_LINES'
        /// </summary>
        [Fact]
        public void PREFECT_CLI_WRAP_LINESTest()
        {
            // TODO unit test for the property 'PREFECT_CLI_WRAP_LINES'
        }

        /// <summary>
        /// Test the property 'PREFECT_TEST_MODE'
        /// </summary>
        [Fact]
        public void PREFECT_TEST_MODETest()
        {
            // TODO unit test for the property 'PREFECT_TEST_MODE'
        }

        /// <summary>
        /// Test the property 'PREFECT_UNIT_TEST_MODE'
        /// </summary>
        [Fact]
        public void PREFECT_UNIT_TEST_MODETest()
        {
            // TODO unit test for the property 'PREFECT_UNIT_TEST_MODE'
        }

        /// <summary>
        /// Test the property 'PREFECT_TEST_SETTING'
        /// </summary>
        [Fact]
        public void PREFECT_TEST_SETTINGTest()
        {
            // TODO unit test for the property 'PREFECT_TEST_SETTING'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_TLS_INSECURE_SKIP_VERIFY'
        /// </summary>
        [Fact]
        public void PREFECT_API_TLS_INSECURE_SKIP_VERIFYTest()
        {
            // TODO unit test for the property 'PREFECT_API_TLS_INSECURE_SKIP_VERIFY'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_URL'
        /// </summary>
        [Fact]
        public void PREFECT_API_URLTest()
        {
            // TODO unit test for the property 'PREFECT_API_URL'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_KEY'
        /// </summary>
        [Fact]
        public void PREFECT_API_KEYTest()
        {
            // TODO unit test for the property 'PREFECT_API_KEY'
        }

        /// <summary>
        /// Test the property 'PREFECTAPIENABLEHTTP2'
        /// </summary>
        [Fact]
        public void PREFECTAPIENABLEHTTP2Test()
        {
            // TODO unit test for the property 'PREFECTAPIENABLEHTTP2'
        }

        /// <summary>
        /// Test the property 'PREFECT_CLIENT_MAX_RETRIES'
        /// </summary>
        [Fact]
        public void PREFECT_CLIENT_MAX_RETRIESTest()
        {
            // TODO unit test for the property 'PREFECT_CLIENT_MAX_RETRIES'
        }

        /// <summary>
        /// Test the property 'PREFECT_CLIENT_RETRY_JITTER_FACTOR'
        /// </summary>
        [Fact]
        public void PREFECT_CLIENT_RETRY_JITTER_FACTORTest()
        {
            // TODO unit test for the property 'PREFECT_CLIENT_RETRY_JITTER_FACTOR'
        }

        /// <summary>
        /// Test the property 'PREFECT_CLIENT_RETRY_EXTRA_CODES'
        /// </summary>
        [Fact]
        public void PREFECT_CLIENT_RETRY_EXTRA_CODESTest()
        {
            // TODO unit test for the property 'PREFECT_CLIENT_RETRY_EXTRA_CODES'
        }

        /// <summary>
        /// Test the property 'PREFECT_CLOUD_API_URL'
        /// </summary>
        [Fact]
        public void PREFECT_CLOUD_API_URLTest()
        {
            // TODO unit test for the property 'PREFECT_CLOUD_API_URL'
        }

        /// <summary>
        /// Test the property 'PREFECT_CLOUD_URL'
        /// </summary>
        [Fact]
        public void PREFECT_CLOUD_URLTest()
        {
            // TODO unit test for the property 'PREFECT_CLOUD_URL'
        }

        /// <summary>
        /// Test the property 'PREFECT_UI_URL'
        /// </summary>
        [Fact]
        public void PREFECT_UI_URLTest()
        {
            // TODO unit test for the property 'PREFECT_UI_URL'
        }

        /// <summary>
        /// Test the property 'PREFECT_CLOUD_UI_URL'
        /// </summary>
        [Fact]
        public void PREFECT_CLOUD_UI_URLTest()
        {
            // TODO unit test for the property 'PREFECT_CLOUD_UI_URL'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_REQUEST_TIMEOUT'
        /// </summary>
        [Fact]
        public void PREFECT_API_REQUEST_TIMEOUTTest()
        {
            // TODO unit test for the property 'PREFECT_API_REQUEST_TIMEOUT'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXPERIMENTAL_WARN'
        /// </summary>
        [Fact]
        public void PREFECT_EXPERIMENTAL_WARNTest()
        {
            // TODO unit test for the property 'PREFECT_EXPERIMENTAL_WARN'
        }

        /// <summary>
        /// Test the property 'PREFECT_PROFILES_PATH'
        /// </summary>
        [Fact]
        public void PREFECT_PROFILES_PATHTest()
        {
            // TODO unit test for the property 'PREFECT_PROFILES_PATH'
        }

        /// <summary>
        /// Test the property 'PREFECT_RESULTS_DEFAULT_SERIALIZER'
        /// </summary>
        [Fact]
        public void PREFECT_RESULTS_DEFAULT_SERIALIZERTest()
        {
            // TODO unit test for the property 'PREFECT_RESULTS_DEFAULT_SERIALIZER'
        }

        /// <summary>
        /// Test the property 'PREFECT_RESULTS_PERSIST_BY_DEFAULT'
        /// </summary>
        [Fact]
        public void PREFECT_RESULTS_PERSIST_BY_DEFAULTTest()
        {
            // TODO unit test for the property 'PREFECT_RESULTS_PERSIST_BY_DEFAULT'
        }

        /// <summary>
        /// Test the property 'PREFECT_TASKS_REFRESH_CACHE'
        /// </summary>
        [Fact]
        public void PREFECT_TASKS_REFRESH_CACHETest()
        {
            // TODO unit test for the property 'PREFECT_TASKS_REFRESH_CACHE'
        }

        /// <summary>
        /// Test the property 'PREFECT_TASK_DEFAULT_RETRIES'
        /// </summary>
        [Fact]
        public void PREFECT_TASK_DEFAULT_RETRIESTest()
        {
            // TODO unit test for the property 'PREFECT_TASK_DEFAULT_RETRIES'
        }

        /// <summary>
        /// Test the property 'PREFECT_FLOW_DEFAULT_RETRIES'
        /// </summary>
        [Fact]
        public void PREFECT_FLOW_DEFAULT_RETRIESTest()
        {
            // TODO unit test for the property 'PREFECT_FLOW_DEFAULT_RETRIES'
        }

        /// <summary>
        /// Test the property 'PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_FLOW_DEFAULT_RETRY_DELAY_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_TASK_DEFAULT_RETRY_DELAY_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOCAL_STORAGE_PATH'
        /// </summary>
        [Fact]
        public void PREFECT_LOCAL_STORAGE_PATHTest()
        {
            // TODO unit test for the property 'PREFECT_LOCAL_STORAGE_PATH'
        }

        /// <summary>
        /// Test the property 'PREFECT_MEMO_STORE_PATH'
        /// </summary>
        [Fact]
        public void PREFECT_MEMO_STORE_PATHTest()
        {
            // TODO unit test for the property 'PREFECT_MEMO_STORE_PATH'
        }

        /// <summary>
        /// Test the property 'PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION'
        /// </summary>
        [Fact]
        public void PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATIONTest()
        {
            // TODO unit test for the property 'PREFECT_MEMOIZE_BLOCK_AUTO_REGISTRATION'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_LEVEL'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_LEVELTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_LEVEL'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_INTERNAL_LEVEL'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_INTERNAL_LEVELTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_INTERNAL_LEVEL'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_SERVER_LEVEL'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_SERVER_LEVELTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_SERVER_LEVEL'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_SETTINGS_PATH'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_SETTINGS_PATHTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_SETTINGS_PATH'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_EXTRA_LOGGERS'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_EXTRA_LOGGERSTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_EXTRA_LOGGERS'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_LOG_PRINTS'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_LOG_PRINTSTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_LOG_PRINTS'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_TO_API_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_TO_API_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_TO_API_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_TO_API_BATCH_INTERVAL'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_TO_API_BATCH_INTERVALTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_TO_API_BATCH_INTERVAL'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_TO_API_BATCH_SIZE'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_TO_API_BATCH_SIZETest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_TO_API_BATCH_SIZE'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_TO_API_MAX_LOG_SIZE'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_TO_API_MAX_LOG_SIZETest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_TO_API_MAX_LOG_SIZE'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOWTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_TO_API_WHEN_MISSING_FLOW'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_COLORS'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_COLORSTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_COLORS'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_MARKUP'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_MARKUPTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_MARKUP'
        }

        /// <summary>
        /// Test the property 'PREFECT_AGENT_QUERY_INTERVAL'
        /// </summary>
        [Fact]
        public void PREFECT_AGENT_QUERY_INTERVALTest()
        {
            // TODO unit test for the property 'PREFECT_AGENT_QUERY_INTERVAL'
        }

        /// <summary>
        /// Test the property 'PREFECT_AGENT_PREFETCH_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_AGENT_PREFETCH_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_AGENT_PREFETCH_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_ASYNC_FETCH_STATE_RESULT'
        /// </summary>
        [Fact]
        public void PREFECT_ASYNC_FETCH_STATE_RESULTTest()
        {
            // TODO unit test for the property 'PREFECT_ASYNC_FETCH_STATE_RESULT'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_BLOCKS_REGISTER_ON_START'
        /// </summary>
        [Fact]
        public void PREFECT_API_BLOCKS_REGISTER_ON_STARTTest()
        {
            // TODO unit test for the property 'PREFECT_API_BLOCKS_REGISTER_ON_START'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_DATABASE_PASSWORD'
        /// </summary>
        [Fact]
        public void PREFECT_API_DATABASE_PASSWORDTest()
        {
            // TODO unit test for the property 'PREFECT_API_DATABASE_PASSWORD'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_DATABASE_CONNECTION_URL'
        /// </summary>
        [Fact]
        public void PREFECT_API_DATABASE_CONNECTION_URLTest()
        {
            // TODO unit test for the property 'PREFECT_API_DATABASE_CONNECTION_URL'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_DATABASE_ECHO'
        /// </summary>
        [Fact]
        public void PREFECT_API_DATABASE_ECHOTest()
        {
            // TODO unit test for the property 'PREFECT_API_DATABASE_ECHO'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_DATABASE_MIGRATE_ON_START'
        /// </summary>
        [Fact]
        public void PREFECT_API_DATABASE_MIGRATE_ON_STARTTest()
        {
            // TODO unit test for the property 'PREFECT_API_DATABASE_MIGRATE_ON_START'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_DATABASE_TIMEOUT'
        /// </summary>
        [Fact]
        public void PREFECT_API_DATABASE_TIMEOUTTest()
        {
            // TODO unit test for the property 'PREFECT_API_DATABASE_TIMEOUT'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_DATABASE_CONNECTION_TIMEOUT'
        /// </summary>
        [Fact]
        public void PREFECT_API_DATABASE_CONNECTION_TIMEOUTTest()
        {
            // TODO unit test for the property 'PREFECT_API_DATABASE_CONNECTION_TIMEOUT'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_SCHEDULER_LOOP_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZETest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_SCHEDULER_MAX_RUNSTest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_SCHEDULER_MAX_RUNS'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_SCHEDULER_MIN_RUNSTest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_SCHEDULER_MIN_RUNS'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIMETest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIMETest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZETest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_SCHEDULER_INSERT_BATCH_SIZE'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_LATE_RUNS_LOOP_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_LATE_RUNS_AFTER_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_DEFAULT_LIMIT'
        /// </summary>
        [Fact]
        public void PREFECT_API_DEFAULT_LIMITTest()
        {
            // TODO unit test for the property 'PREFECT_API_DEFAULT_LIMIT'
        }

        /// <summary>
        /// Test the property 'PREFECT_SERVER_API_HOST'
        /// </summary>
        [Fact]
        public void PREFECT_SERVER_API_HOSTTest()
        {
            // TODO unit test for the property 'PREFECT_SERVER_API_HOST'
        }

        /// <summary>
        /// Test the property 'PREFECT_SERVER_API_PORT'
        /// </summary>
        [Fact]
        public void PREFECT_SERVER_API_PORTTest()
        {
            // TODO unit test for the property 'PREFECT_SERVER_API_PORT'
        }

        /// <summary>
        /// Test the property 'PREFECT_SERVER_API_KEEPALIVE_TIMEOUT'
        /// </summary>
        [Fact]
        public void PREFECT_SERVER_API_KEEPALIVE_TIMEOUTTest()
        {
            // TODO unit test for the property 'PREFECT_SERVER_API_KEEPALIVE_TIMEOUT'
        }

        /// <summary>
        /// Test the property 'PREFECT_UI_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_UI_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_UI_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_UI_API_URL'
        /// </summary>
        [Fact]
        public void PREFECT_UI_API_URLTest()
        {
            // TODO unit test for the property 'PREFECT_UI_API_URL'
        }

        /// <summary>
        /// Test the property 'PREFECT_SERVER_ANALYTICS_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_SERVER_ANALYTICS_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_SERVER_ANALYTICS_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_SCHEDULER_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_SCHEDULER_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_SCHEDULER_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_LATE_RUNS_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_LATE_RUNS_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_LATE_RUNS_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_PAUSE_EXPIRATIONS_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH'
        /// </summary>
        [Fact]
        public void PREFECT_API_TASK_CACHE_KEY_MAX_LENGTHTest()
        {
            // TODO unit test for the property 'PREFECT_API_TASK_CACHE_KEY_MAX_LENGTH'
        }

        /// <summary>
        /// Test the property 'PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_API_SERVICES_CANCELLATION_CLEANUP_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT'
        /// </summary>
        [Fact]
        public void PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENTTest()
        {
            // TODO unit test for the property 'PREFECT_EXPERIMENTAL_ENABLE_EVENTS_CLIENT'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT'
        /// </summary>
        [Fact]
        public void PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENTTest()
        {
            // TODO unit test for the property 'PREFECT_EXPERIMENTAL_WARN_EVENTS_CLIENT'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS'
        /// </summary>
        [Fact]
        public void PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLSTest()
        {
            // TODO unit test for the property 'PREFECT_EXPERIMENTAL_ENABLE_WORK_POOLS'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXPERIMENTAL_WARN_WORK_POOLS'
        /// </summary>
        [Fact]
        public void PREFECT_EXPERIMENTAL_WARN_WORK_POOLSTest()
        {
            // TODO unit test for the property 'PREFECT_EXPERIMENTAL_WARN_WORK_POOLS'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXPERIMENTAL_ENABLE_WORKERS'
        /// </summary>
        [Fact]
        public void PREFECT_EXPERIMENTAL_ENABLE_WORKERSTest()
        {
            // TODO unit test for the property 'PREFECT_EXPERIMENTAL_ENABLE_WORKERS'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXPERIMENTAL_WARN_WORKERS'
        /// </summary>
        [Fact]
        public void PREFECT_EXPERIMENTAL_WARN_WORKERSTest()
        {
            // TODO unit test for the property 'PREFECT_EXPERIMENTAL_WARN_WORKERS'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXPERIMENTAL_WARN_VISUALIZE'
        /// </summary>
        [Fact]
        public void PREFECT_EXPERIMENTAL_WARN_VISUALIZETest()
        {
            // TODO unit test for the property 'PREFECT_EXPERIMENTAL_WARN_VISUALIZE'
        }

        /// <summary>
        /// Test the property 'PREFECT_WORKER_HEARTBEAT_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_WORKER_HEARTBEAT_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_WORKER_HEARTBEAT_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_WORKER_QUERY_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_WORKER_QUERY_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_WORKER_QUERY_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_WORKER_PREFETCH_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_WORKER_PREFETCH_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_WORKER_PREFETCH_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS'
        /// </summary>
        [Fact]
        public void PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTSTest()
        {
            // TODO unit test for the property 'PREFECT_EXPERIMENTAL_ENABLE_ARTIFACTS'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXPERIMENTAL_WARN_ARTIFACTS'
        /// </summary>
        [Fact]
        public void PREFECT_EXPERIMENTAL_WARN_ARTIFACTSTest()
        {
            // TODO unit test for the property 'PREFECT_EXPERIMENTAL_WARN_ARTIFACTS'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD'
        /// </summary>
        [Fact]
        public void PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARDTest()
        {
            // TODO unit test for the property 'PREFECT_EXPERIMENTAL_ENABLE_WORKSPACE_DASHBOARD'
        }

        /// <summary>
        /// Test the property 'PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD'
        /// </summary>
        [Fact]
        public void PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARDTest()
        {
            // TODO unit test for the property 'PREFECT_EXPERIMENTAL_WARN_WORKSPACE_DASHBOARD'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_ORION_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_ORION_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_ORION_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_ORION_BATCH_INTERVAL'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_ORION_BATCH_INTERVALTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_ORION_BATCH_INTERVAL'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_ORION_BATCH_SIZE'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_ORION_BATCH_SIZETest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_ORION_BATCH_SIZE'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_ORION_MAX_LOG_SIZE'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_ORION_MAX_LOG_SIZETest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_ORION_MAX_LOG_SIZE'
        }

        /// <summary>
        /// Test the property 'PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW'
        /// </summary>
        [Fact]
        public void PREFECT_LOGGING_ORION_WHEN_MISSING_FLOWTest()
        {
            // TODO unit test for the property 'PREFECT_LOGGING_ORION_WHEN_MISSING_FLOW'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_BLOCKS_REGISTER_ON_START'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_BLOCKS_REGISTER_ON_STARTTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_BLOCKS_REGISTER_ON_START'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_DATABASE_PASSWORD'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_DATABASE_PASSWORDTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_DATABASE_PASSWORD'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_DATABASE_CONNECTION_URL'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_DATABASE_CONNECTION_URLTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_DATABASE_CONNECTION_URL'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_DATABASE_ECHO'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_DATABASE_ECHOTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_DATABASE_ECHO'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_DATABASE_MIGRATE_ON_START'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_DATABASE_MIGRATE_ON_STARTTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_DATABASE_MIGRATE_ON_START'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_DATABASE_TIMEOUT'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_DATABASE_TIMEOUTTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_DATABASE_TIMEOUT'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_DATABASE_CONNECTION_TIMEOUTTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_DATABASE_CONNECTION_TIMEOUT'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_SCHEDULER_LOOP_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZETest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_SCHEDULER_DEPLOYMENT_BATCH_SIZE'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNSTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_SCHEDULER_MAX_RUNS'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNS'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNSTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_SCHEDULER_MIN_RUNS'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIMETest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_SCHEDULER_MAX_SCHEDULED_TIME'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIMETest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_SCHEDULER_MIN_SCHEDULED_TIME'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZETest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_SCHEDULER_INSERT_BATCH_SIZE'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_LATE_RUNS_LOOP_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_LATE_RUNS_AFTER_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_LOOP_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDSTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_LOOP_SECONDS'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_API_DEFAULT_LIMIT'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_API_DEFAULT_LIMITTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_API_DEFAULT_LIMIT'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_API_HOST'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_API_HOSTTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_API_HOST'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_API_PORT'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_API_PORTTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_API_PORT'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_API_KEEPALIVE_TIMEOUT'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_API_KEEPALIVE_TIMEOUTTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_API_KEEPALIVE_TIMEOUT'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_UI_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_UI_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_UI_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_UI_API_URL'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_UI_API_URLTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_UI_API_URL'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_ANALYTICS_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_ANALYTICS_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_ANALYTICS_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_SCHEDULER_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_SCHEDULER_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_SCHEDULER_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_LATE_RUNS_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_LATE_RUNS_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_FLOW_RUN_NOTIFICATIONS_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_PAUSE_EXPIRATIONS_ENABLED'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTH'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTHTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_TASK_CACHE_KEY_MAX_LENGTH'
        }

        /// <summary>
        /// Test the property 'PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLED'
        /// </summary>
        [Fact]
        public void PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLEDTest()
        {
            // TODO unit test for the property 'PREFECT_ORION_SERVICES_CANCELLATION_CLEANUP_ENABLED'
        }
    }
}
