/*
 * Prefect API Client for .NET
 *
 * For more information, visit: https://github.com/rpeden/prefect-client-dotnet
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using PrefectClient.Client;
using PrefectClient.Api;
// uncomment below to import models
//using PrefectClient.Model;

namespace PrefectClient.Test.Api
{
    /// <summary>
    ///  Class for testing DeploymentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DeploymentsApiTests : IDisposable
    {
        private DeploymentsApi instance;

        public DeploymentsApiTests()
        {
            instance = new DeploymentsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DeploymentsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DeploymentsApi
            //Assert.IsType<DeploymentsApi>(instance);
        }

        /// <summary>
        /// Test CountDeployments
        /// </summary>
        [Fact]
        public void CountDeploymentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CountDeploymentsRequest countDeploymentsRequest = null;
            //var response = instance.CountDeployments(countDeploymentsRequest);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test CreateDeployment
        /// </summary>
        [Fact]
        public void CreateDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeploymentCreate deploymentCreate = null;
            //var response = instance.CreateDeployment(deploymentCreate);
            //Assert.IsType<DeploymentResponse>(response);
        }

        /// <summary>
        /// Test CreateFlowRunFromDeployment
        /// </summary>
        [Fact]
        public void CreateFlowRunFromDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //DeploymentFlowRunCreate deploymentFlowRunCreate = null;
            //var response = instance.CreateFlowRunFromDeployment(id, deploymentFlowRunCreate);
            //Assert.IsType<FlowRunResponse>(response);
        }

        /// <summary>
        /// Test DeleteDeployment
        /// </summary>
        [Fact]
        public void DeleteDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.DeleteDeployment(id);
        }

        /// <summary>
        /// Test ReadDeployment
        /// </summary>
        [Fact]
        public void ReadDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ReadDeployment(id);
            //Assert.IsType<DeploymentResponse>(response);
        }

        /// <summary>
        /// Test ReadDeploymentByName
        /// </summary>
        [Fact]
        public void ReadDeploymentByNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flowName = null;
            //string deploymentName = null;
            //var response = instance.ReadDeploymentByName(flowName, deploymentName);
            //Assert.IsType<DeploymentResponse>(response);
        }

        /// <summary>
        /// Test ReadDeployments
        /// </summary>
        [Fact]
        public void ReadDeploymentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReadDeploymentsRequest readDeploymentsRequest = null;
            //var response = instance.ReadDeployments(readDeploymentsRequest);
            //Assert.IsType<List<DeploymentResponse>>(response);
        }

        /// <summary>
        /// Test ScheduleDeployment
        /// </summary>
        [Fact]
        public void ScheduleDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //ScheduleDeploymentRequest scheduleDeploymentRequest = null;
            //var response = instance.ScheduleDeployment(id, scheduleDeploymentRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test SetScheduleActive
        /// </summary>
        [Fact]
        public void SetScheduleActiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.SetScheduleActive(id);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test SetScheduleInactive
        /// </summary>
        [Fact]
        public void SetScheduleInactiveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.SetScheduleInactive(id);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UpdateDeployment
        /// </summary>
        [Fact]
        public void UpdateDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //DeploymentUpdate deploymentUpdate = null;
            //instance.UpdateDeployment(id, deploymentUpdate);
        }

        /// <summary>
        /// Test WorkQueueCheckForDeployment
        /// </summary>
        [Fact]
        public void WorkQueueCheckForDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.WorkQueueCheckForDeployment(id);
            //Assert.IsType<List<WorkQueue>>(response);
        }
    }
}
