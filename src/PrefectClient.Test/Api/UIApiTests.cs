/*
 * Prefect API Client for .NET
 *
 * For more information, visit: https://github.com/rpeden/prefect-client-dotnet
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using PrefectClient.Client;
using PrefectClient.Api;
// uncomment below to import models
//using PrefectClient.Model;

namespace PrefectClient.Test.Api
{
    /// <summary>
    ///  Class for testing UIApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UIApiTests : IDisposable
    {
        private UIApi instance;

        public UIApiTests()
        {
            instance = new UIApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UIApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UIApi
            //Assert.IsType<UIApi>(instance);
        }

        /// <summary>
        /// Test ReadDashboardTaskRunCounts
        /// </summary>
        [Fact]
        public void ReadDashboardTaskRunCountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReadDashboardTaskRunCountsRequest readDashboardTaskRunCountsRequest = null;
            //var response = instance.ReadDashboardTaskRunCounts(readDashboardTaskRunCountsRequest);
            //Assert.IsType<List<TaskRunCount>>(response);
        }

        /// <summary>
        /// Test ReadFlowRunHistory
        /// </summary>
        [Fact]
        public void ReadFlowRunHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReadFlowRunHistoryRequest readFlowRunHistoryRequest = null;
            //var response = instance.ReadFlowRunHistory(readFlowRunHistoryRequest);
            //Assert.IsType<List<SimpleFlowRun>>(response);
        }
    }
}
