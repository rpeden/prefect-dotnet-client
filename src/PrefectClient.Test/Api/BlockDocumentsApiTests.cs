/*
 * Prefect API Client for .NET
 *
 * For more information, visit: https://github.com/rpeden/prefect-client-dotnet
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using PrefectClient.Client;
using PrefectClient.Api;
// uncomment below to import models
//using PrefectClient.Model;

namespace PrefectClient.Test.Api
{
    /// <summary>
    ///  Class for testing BlockDocumentsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BlockDocumentsApiTests : IDisposable
    {
        private BlockDocumentsApi instance;

        public BlockDocumentsApiTests()
        {
            instance = new BlockDocumentsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BlockDocumentsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BlockDocumentsApi
            //Assert.IsType<BlockDocumentsApi>(instance);
        }

        /// <summary>
        /// Test CreateBlockDocument
        /// </summary>
        [Fact]
        public void CreateBlockDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BlockDocumentCreate blockDocumentCreate = null;
            //var response = instance.CreateBlockDocument(blockDocumentCreate);
            //Assert.IsType<BlockDocument>(response);
        }

        /// <summary>
        /// Test DeleteBlockDocument
        /// </summary>
        [Fact]
        public void DeleteBlockDocumentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.DeleteBlockDocument(id);
        }

        /// <summary>
        /// Test ReadBlockDocumentById
        /// </summary>
        [Fact]
        public void ReadBlockDocumentByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //bool? includeSecrets = null;
            //var response = instance.ReadBlockDocumentById(id, includeSecrets);
            //Assert.IsType<BlockDocument>(response);
        }

        /// <summary>
        /// Test ReadBlockDocumentByNameForBlockType
        /// </summary>
        [Fact]
        public void ReadBlockDocumentByNameForBlockTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string slug = null;
            //string blockDocumentName = null;
            //bool? includeSecrets = null;
            //var response = instance.ReadBlockDocumentByNameForBlockType(slug, blockDocumentName, includeSecrets);
            //Assert.IsType<BlockDocument>(response);
        }

        /// <summary>
        /// Test ReadBlockDocuments
        /// </summary>
        [Fact]
        public void ReadBlockDocumentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReadBlockDocumentsRequest readBlockDocumentsRequest = null;
            //var response = instance.ReadBlockDocuments(readBlockDocumentsRequest);
            //Assert.IsType<List<BlockDocument>>(response);
        }

        /// <summary>
        /// Test ReadBlockDocumentsForBlockType
        /// </summary>
        [Fact]
        public void ReadBlockDocumentsForBlockTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string slug = null;
            //bool? includeSecrets = null;
            //var response = instance.ReadBlockDocumentsForBlockType(slug, includeSecrets);
            //Assert.IsType<List<BlockDocument>>(response);
        }

        /// <summary>
        /// Test UpdateBlockDocumentData
        /// </summary>
        [Fact]
        public void UpdateBlockDocumentDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //BlockDocumentUpdate blockDocumentUpdate = null;
            //instance.UpdateBlockDocumentData(id, blockDocumentUpdate);
        }
    }
}
