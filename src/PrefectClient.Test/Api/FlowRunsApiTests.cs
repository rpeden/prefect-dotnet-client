/*
 * Prefect API Client for .NET
 *
 * For more information, visit: https://github.com/rpeden/prefect-client-dotnet
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using PrefectClient.Client;
using PrefectClient.Api;
// uncomment below to import models
//using PrefectClient.Model;

namespace PrefectClient.Test.Api
{
    /// <summary>
    ///  Class for testing FlowRunsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class FlowRunsApiTests : IDisposable
    {
        private FlowRunsApi instance;

        public FlowRunsApiTests()
        {
            instance = new FlowRunsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FlowRunsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' FlowRunsApi
            //Assert.IsType<FlowRunsApi>(instance);
        }

        /// <summary>
        /// Test AverageFlowRunLateness
        /// </summary>
        [Fact]
        public void AverageFlowRunLatenessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AverageFlowRunLatenessRequest averageFlowRunLatenessRequest = null;
            //var response = instance.AverageFlowRunLateness(averageFlowRunLatenessRequest);
            //Assert.IsType<decimal>(response);
        }

        /// <summary>
        /// Test CountFlowRuns
        /// </summary>
        [Fact]
        public void CountFlowRunsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CountFlowRunsRequest countFlowRunsRequest = null;
            //var response = instance.CountFlowRuns(countFlowRunsRequest);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test CreateFlowRun
        /// </summary>
        [Fact]
        public void CreateFlowRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FlowRunCreate flowRunCreate = null;
            //var response = instance.CreateFlowRun(flowRunCreate);
            //Assert.IsType<FlowRunResponse>(response);
        }

        /// <summary>
        /// Test DeleteFlowRun
        /// </summary>
        [Fact]
        public void DeleteFlowRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.DeleteFlowRun(id);
        }

        /// <summary>
        /// Test FlowRunHistory
        /// </summary>
        [Fact]
        public void FlowRunHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FlowRunHistoryRequest flowRunHistoryRequest = null;
            //var response = instance.FlowRunHistory(flowRunHistoryRequest);
            //Assert.IsType<List<HistoryResponse>>(response);
        }

        /// <summary>
        /// Test ReadFlowRun
        /// </summary>
        [Fact]
        public void ReadFlowRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ReadFlowRun(id);
            //Assert.IsType<FlowRunResponse>(response);
        }

        /// <summary>
        /// Test ReadFlowRunGraph
        /// </summary>
        [Fact]
        public void ReadFlowRunGraphTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ReadFlowRunGraph(id);
            //Assert.IsType<List<DependencyResult>>(response);
        }

        /// <summary>
        /// Test ReadFlowRunHistory
        /// </summary>
        [Fact]
        public void ReadFlowRunHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReadFlowRunHistoryRequest readFlowRunHistoryRequest = null;
            //var response = instance.ReadFlowRunHistory(readFlowRunHistoryRequest);
            //Assert.IsType<List<SimpleFlowRun>>(response);
        }

        /// <summary>
        /// Test ReadFlowRuns
        /// </summary>
        [Fact]
        public void ReadFlowRunsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReadFlowRunsRequest readFlowRunsRequest = null;
            //var response = instance.ReadFlowRuns(readFlowRunsRequest);
            //Assert.IsType<List<FlowRunResponse>>(response);
        }

        /// <summary>
        /// Test ResumeFlowRun
        /// </summary>
        [Fact]
        public void ResumeFlowRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ResumeFlowRun(id);
            //Assert.IsType<OrchestrationResult>(response);
        }

        /// <summary>
        /// Test SetFlowRunState
        /// </summary>
        [Fact]
        public void SetFlowRunStateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SetFlowRunStateRequest setFlowRunStateRequest = null;
            //var response = instance.SetFlowRunState(id, setFlowRunStateRequest);
            //Assert.IsType<OrchestrationResult>(response);
        }

        /// <summary>
        /// Test UpdateFlowRun
        /// </summary>
        [Fact]
        public void UpdateFlowRunTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //FlowRunUpdate flowRunUpdate = null;
            //instance.UpdateFlowRun(id, flowRunUpdate);
        }
    }
}
