/*
 * Prefect API Client for .NET
 *
 * For more information, visit: https://github.com/rpeden/prefect-client-dotnet
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using PrefectClient.Client;
using PrefectClient.Api;
// uncomment below to import models
//using PrefectClient.Model;

namespace PrefectClient.Test.Api
{
    /// <summary>
    ///  Class for testing ArtifactsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ArtifactsApiTests : IDisposable
    {
        private ArtifactsApi instance;

        public ArtifactsApiTests()
        {
            instance = new ArtifactsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ArtifactsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ArtifactsApi
            //Assert.IsType<ArtifactsApi>(instance);
        }

        /// <summary>
        /// Test CountArtifacts
        /// </summary>
        [Fact]
        public void CountArtifactsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CountArtifactsRequest countArtifactsRequest = null;
            //var response = instance.CountArtifacts(countArtifactsRequest);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test CountLatestArtifacts
        /// </summary>
        [Fact]
        public void CountLatestArtifactsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CountLatestArtifactsRequest countLatestArtifactsRequest = null;
            //var response = instance.CountLatestArtifacts(countLatestArtifactsRequest);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test CreateArtifact
        /// </summary>
        [Fact]
        public void CreateArtifactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ArtifactCreate artifactCreate = null;
            //var response = instance.CreateArtifact(artifactCreate);
            //Assert.IsType<Artifact>(response);
        }

        /// <summary>
        /// Test DeleteArtifact
        /// </summary>
        [Fact]
        public void DeleteArtifactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.DeleteArtifact(id);
        }

        /// <summary>
        /// Test ReadArtifact
        /// </summary>
        [Fact]
        public void ReadArtifactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.ReadArtifact(id);
            //Assert.IsType<Artifact>(response);
        }

        /// <summary>
        /// Test ReadArtifacts
        /// </summary>
        [Fact]
        public void ReadArtifactsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReadArtifactsRequest readArtifactsRequest = null;
            //var response = instance.ReadArtifacts(readArtifactsRequest);
            //Assert.IsType<List<Artifact>>(response);
        }

        /// <summary>
        /// Test ReadLatestArtifact
        /// </summary>
        [Fact]
        public void ReadLatestArtifactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string key = null;
            //var response = instance.ReadLatestArtifact(key);
            //Assert.IsType<Artifact>(response);
        }

        /// <summary>
        /// Test ReadLatestArtifacts
        /// </summary>
        [Fact]
        public void ReadLatestArtifactsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReadLatestArtifactsRequest readLatestArtifactsRequest = null;
            //var response = instance.ReadLatestArtifacts(readLatestArtifactsRequest);
            //Assert.IsType<List<ArtifactCollection>>(response);
        }

        /// <summary>
        /// Test UpdateArtifact
        /// </summary>
        [Fact]
        public void UpdateArtifactTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //ArtifactUpdate artifactUpdate = null;
            //instance.UpdateArtifact(id, artifactUpdate);
        }
    }
}
